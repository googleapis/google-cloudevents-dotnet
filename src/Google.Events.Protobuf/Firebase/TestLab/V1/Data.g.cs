// Copyright 2022, Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/events/firebase/testlab/v1/data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Events.Protobuf.Firebase.TestLab.V1 {

  /// <summary>Holder for reflection information generated from google/events/firebase/testlab/v1/data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for google/events/firebase/testlab/v1/data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvZXZlbnRzL2ZpcmViYXNlL3Rlc3RsYWIvdjEvZGF0YS5wcm90",
            "bxIhZ29vZ2xlLmV2ZW50cy5maXJlYmFzZS50ZXN0bGFiLnYxGh9nb29nbGUv",
            "cHJvdG9idWYvdGltZXN0YW1wLnByb3RvIv0CChNUZXN0TWF0cml4RXZlbnRE",
            "YXRhEi8KC2NyZWF0ZV90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBI7CgVzdGF0ZRgCIAEoDjIsLmdvb2dsZS5ldmVudHMuZmlyZWJh",
            "c2UudGVzdGxhYi52MS5UZXN0U3RhdGUSHgoWaW52YWxpZF9tYXRyaXhfZGV0",
            "YWlscxgDIAEoCRJKCg9vdXRjb21lX3N1bW1hcnkYBCABKA4yMS5nb29nbGUu",
            "ZXZlbnRzLmZpcmViYXNlLnRlc3RsYWIudjEuT3V0Y29tZVN1bW1hcnkSSAoO",
            "cmVzdWx0X3N0b3JhZ2UYBSABKAsyMC5nb29nbGUuZXZlbnRzLmZpcmViYXNl",
            "LnRlc3RsYWIudjEuUmVzdWx0U3RvcmFnZRJCCgtjbGllbnRfaW5mbxgGIAEo",
            "CzItLmdvb2dsZS5ldmVudHMuZmlyZWJhc2UudGVzdGxhYi52MS5DbGllbnRJ",
            "bmZvIpkBCgpDbGllbnRJbmZvEg4KBmNsaWVudBgBIAEoCRJLCgdkZXRhaWxz",
            "GAIgAygLMjouZ29vZ2xlLmV2ZW50cy5maXJlYmFzZS50ZXN0bGFiLnYxLkNs",
            "aWVudEluZm8uRGV0YWlsc0VudHJ5Gi4KDERldGFpbHNFbnRyeRILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAk6AjgBInQKDVJlc3VsdFN0b3JhZ2USHAoU",
            "dG9vbF9yZXN1bHRzX2hpc3RvcnkYASABKAkSHgoWdG9vbF9yZXN1bHRzX2V4",
            "ZWN1dGlvbhgCIAEoCRITCgtyZXN1bHRzX3VyaRgDIAEoCRIQCghnY3NfcGF0",
            "aBgEIAEoCSpqCglUZXN0U3RhdGUSGgoWVEVTVF9TVEFURV9VTlNQRUNJRklF",
            "RBAAEg4KClZBTElEQVRJTkcQARILCgdQRU5ESU5HEAISDAoIRklOSVNIRUQQ",
            "AxIJCgVFUlJPUhAEEgsKB0lOVkFMSUQQBSpqCg5PdXRjb21lU3VtbWFyeRIf",
            "ChtPVVRDT01FX1NVTU1BUllfVU5TUEVDSUZJRUQQABILCgdTVUNDRVNTEAES",
            "CwoHRkFJTFVSRRACEhAKDElOQ09OQ0xVU0lWRRADEgsKB1NLSVBQRUQQBEJh",
            "CiVjb20uZ29vZ2xlLmV2ZW50cy5maXJlYmFzZS50ZXN0bGFiLnYxQglEYXRh",
            "UHJvdG9QAaoCKkdvb2dsZS5FdmVudHMuUHJvdG9idWYuRmlyZWJhc2UuVGVz",
            "dExhYi5WMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState), typeof(global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Firebase.TestLab.V1.TestMatrixEventData), global::Google.Events.Protobuf.Firebase.TestLab.V1.TestMatrixEventData.Parser, new[]{ "CreateTime", "State", "InvalidMatrixDetails", "OutcomeSummary", "ResultStorage", "ClientInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Firebase.TestLab.V1.ClientInfo), global::Google.Events.Protobuf.Firebase.TestLab.V1.ClientInfo.Parser, new[]{ "Client", "Details" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Firebase.TestLab.V1.ResultStorage), global::Google.Events.Protobuf.Firebase.TestLab.V1.ResultStorage.Parser, new[]{ "ToolResultsHistory", "ToolResultsExecution", "ResultsUri", "GcsPath" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Possible test states for a test matrix.
  /// </summary>
  public enum TestState {
    /// <summary>
    /// The default value. This value is used if the state is omitted.
    /// </summary>
    [pbr::OriginalName("TEST_STATE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The test matrix is being validated.
    /// </summary>
    [pbr::OriginalName("VALIDATING")] Validating = 1,
    /// <summary>
    /// The test matrix is waiting for resources to become available.
    /// </summary>
    [pbr::OriginalName("PENDING")] Pending = 2,
    /// <summary>
    /// The test matrix has completed normally.
    /// </summary>
    [pbr::OriginalName("FINISHED")] Finished = 3,
    /// <summary>
    /// The test matrix has completed because of an infrastructure failure.
    /// </summary>
    [pbr::OriginalName("ERROR")] Error = 4,
    /// <summary>
    /// The test matrix was not run because the provided inputs are not valid.
    /// </summary>
    [pbr::OriginalName("INVALID")] Invalid = 5,
  }

  /// <summary>
  /// Outcome summary for a finished test matrix.
  /// </summary>
  public enum OutcomeSummary {
    /// <summary>
    /// The default value. This value is used if the state is omitted.
    /// </summary>
    [pbr::OriginalName("OUTCOME_SUMMARY_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The test matrix run was successful, for instance:
    /// - All test cases passed.
    /// - No crash of the application under test was detected.
    /// </summary>
    [pbr::OriginalName("SUCCESS")] Success = 1,
    /// <summary>
    /// A run failed, for instance:
    /// - One or more test case failed.
    /// - A test timed out.
    /// - The application under test crashed.
    /// </summary>
    [pbr::OriginalName("FAILURE")] Failure = 2,
    /// <summary>
    /// Something unexpected happened. The test run should still be considered
    /// unsuccessful but this is likely a transient problem and re-running the
    /// test might be successful.
    /// </summary>
    [pbr::OriginalName("INCONCLUSIVE")] Inconclusive = 3,
    /// <summary>
    /// All tests were skipped.
    /// </summary>
    [pbr::OriginalName("SKIPPED")] Skipped = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The data within all Firebase test matrix events.
  /// </summary>
  public sealed partial class TestMatrixEventData : pb::IMessage<TestMatrixEventData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestMatrixEventData> _parser = new pb::MessageParser<TestMatrixEventData>(() => new TestMatrixEventData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestMatrixEventData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Firebase.TestLab.V1.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestMatrixEventData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestMatrixEventData(TestMatrixEventData other) : this() {
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      state_ = other.state_;
      invalidMatrixDetails_ = other.invalidMatrixDetails_;
      outcomeSummary_ = other.outcomeSummary_;
      resultStorage_ = other.resultStorage_ != null ? other.resultStorage_.Clone() : null;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestMatrixEventData Clone() {
      return new TestMatrixEventData(this);
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Time the test matrix was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState state_ = global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState.Unspecified;
    /// <summary>
    /// State of the test matrix.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "invalid_matrix_details" field.</summary>
    public const int InvalidMatrixDetailsFieldNumber = 3;
    private string invalidMatrixDetails_ = "";
    /// <summary>
    /// Code that describes why the test matrix is considered invalid. Only set for
    /// matrices in the INVALID state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InvalidMatrixDetails {
      get { return invalidMatrixDetails_; }
      set {
        invalidMatrixDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "outcome_summary" field.</summary>
    public const int OutcomeSummaryFieldNumber = 4;
    private global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary outcomeSummary_ = global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary.Unspecified;
    /// <summary>
    /// Outcome summary of the test matrix.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary OutcomeSummary {
      get { return outcomeSummary_; }
      set {
        outcomeSummary_ = value;
      }
    }

    /// <summary>Field number for the "result_storage" field.</summary>
    public const int ResultStorageFieldNumber = 5;
    private global::Google.Events.Protobuf.Firebase.TestLab.V1.ResultStorage resultStorage_;
    /// <summary>
    /// Locations where test results are stored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Firebase.TestLab.V1.ResultStorage ResultStorage {
      get { return resultStorage_; }
      set {
        resultStorage_ = value;
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 6;
    private global::Google.Events.Protobuf.Firebase.TestLab.V1.ClientInfo clientInfo_;
    /// <summary>
    /// Information provided by the client that created the test matrix.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Firebase.TestLab.V1.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestMatrixEventData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestMatrixEventData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (State != other.State) return false;
      if (InvalidMatrixDetails != other.InvalidMatrixDetails) return false;
      if (OutcomeSummary != other.OutcomeSummary) return false;
      if (!object.Equals(ResultStorage, other.ResultStorage)) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (State != global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState.Unspecified) hash ^= State.GetHashCode();
      if (InvalidMatrixDetails.Length != 0) hash ^= InvalidMatrixDetails.GetHashCode();
      if (OutcomeSummary != global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary.Unspecified) hash ^= OutcomeSummary.GetHashCode();
      if (resultStorage_ != null) hash ^= ResultStorage.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (State != global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (InvalidMatrixDetails.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InvalidMatrixDetails);
      }
      if (OutcomeSummary != global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OutcomeSummary);
      }
      if (resultStorage_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResultStorage);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ClientInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (State != global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (InvalidMatrixDetails.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InvalidMatrixDetails);
      }
      if (OutcomeSummary != global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OutcomeSummary);
      }
      if (resultStorage_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResultStorage);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ClientInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (State != global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (InvalidMatrixDetails.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvalidMatrixDetails);
      }
      if (OutcomeSummary != global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OutcomeSummary);
      }
      if (resultStorage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResultStorage);
      }
      if (clientInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestMatrixEventData other) {
      if (other == null) {
        return;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.State != global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState.Unspecified) {
        State = other.State;
      }
      if (other.InvalidMatrixDetails.Length != 0) {
        InvalidMatrixDetails = other.InvalidMatrixDetails;
      }
      if (other.OutcomeSummary != global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary.Unspecified) {
        OutcomeSummary = other.OutcomeSummary;
      }
      if (other.resultStorage_ != null) {
        if (resultStorage_ == null) {
          ResultStorage = new global::Google.Events.Protobuf.Firebase.TestLab.V1.ResultStorage();
        }
        ResultStorage.MergeFrom(other.ResultStorage);
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Google.Events.Protobuf.Firebase.TestLab.V1.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 16: {
            State = (global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState) input.ReadEnum();
            break;
          }
          case 26: {
            InvalidMatrixDetails = input.ReadString();
            break;
          }
          case 32: {
            OutcomeSummary = (global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary) input.ReadEnum();
            break;
          }
          case 42: {
            if (resultStorage_ == null) {
              ResultStorage = new global::Google.Events.Protobuf.Firebase.TestLab.V1.ResultStorage();
            }
            input.ReadMessage(ResultStorage);
            break;
          }
          case 50: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Google.Events.Protobuf.Firebase.TestLab.V1.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 16: {
            State = (global::Google.Events.Protobuf.Firebase.TestLab.V1.TestState) input.ReadEnum();
            break;
          }
          case 26: {
            InvalidMatrixDetails = input.ReadString();
            break;
          }
          case 32: {
            OutcomeSummary = (global::Google.Events.Protobuf.Firebase.TestLab.V1.OutcomeSummary) input.ReadEnum();
            break;
          }
          case 42: {
            if (resultStorage_ == null) {
              ResultStorage = new global::Google.Events.Protobuf.Firebase.TestLab.V1.ResultStorage();
            }
            input.ReadMessage(ResultStorage);
            break;
          }
          case 50: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Google.Events.Protobuf.Firebase.TestLab.V1.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Information about the client which invoked the test.
  /// </summary>
  public sealed partial class ClientInfo : pb::IMessage<ClientInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientInfo> _parser = new pb::MessageParser<ClientInfo>(() => new ClientInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Firebase.TestLab.V1.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo(ClientInfo other) : this() {
      client_ = other.client_;
      details_ = other.details_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo Clone() {
      return new ClientInfo(this);
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 1;
    private string client_ = "";
    /// <summary>
    /// Client name, such as "gcloud".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Client {
      get { return client_; }
      set {
        client_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_details_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> details_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Map of detailed information about the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Details {
      get { return details_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Client != other.Client) return false;
      if (!Details.Equals(other.Details)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Client.Length != 0) hash ^= Client.GetHashCode();
      hash ^= Details.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Client.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Client);
      }
      details_.WriteTo(output, _map_details_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Client.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Client);
      }
      details_.WriteTo(ref output, _map_details_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Client.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Client);
      }
      size += details_.CalculateSize(_map_details_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientInfo other) {
      if (other == null) {
        return;
      }
      if (other.Client.Length != 0) {
        Client = other.Client;
      }
      details_.Add(other.details_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Client = input.ReadString();
            break;
          }
          case 18: {
            details_.AddEntriesFrom(input, _map_details_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Client = input.ReadString();
            break;
          }
          case 18: {
            details_.AddEntriesFrom(ref input, _map_details_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Locations where test results are stored.
  /// </summary>
  public sealed partial class ResultStorage : pb::IMessage<ResultStorage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResultStorage> _parser = new pb::MessageParser<ResultStorage>(() => new ResultStorage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultStorage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Firebase.TestLab.V1.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultStorage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultStorage(ResultStorage other) : this() {
      toolResultsHistory_ = other.toolResultsHistory_;
      toolResultsExecution_ = other.toolResultsExecution_;
      resultsUri_ = other.resultsUri_;
      gcsPath_ = other.gcsPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultStorage Clone() {
      return new ResultStorage(this);
    }

    /// <summary>Field number for the "tool_results_history" field.</summary>
    public const int ToolResultsHistoryFieldNumber = 1;
    private string toolResultsHistory_ = "";
    /// <summary>
    /// Tool Results history resource containing test results. Format is
    /// `projects/{project_id}/histories/{history_id}`.
    /// See https://firebase.google.com/docs/test-lab/reference/toolresults/rest
    /// for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToolResultsHistory {
      get { return toolResultsHistory_; }
      set {
        toolResultsHistory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tool_results_execution" field.</summary>
    public const int ToolResultsExecutionFieldNumber = 2;
    private string toolResultsExecution_ = "";
    /// <summary>
    /// Tool Results execution resource containing test results. Format is
    /// `projects/{project_id}/histories/{history_id}/executions/{execution_id}`.
    /// Optional, can be omitted in erroneous test states.
    /// See https://firebase.google.com/docs/test-lab/reference/toolresults/rest
    /// for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToolResultsExecution {
      get { return toolResultsExecution_; }
      set {
        toolResultsExecution_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "results_uri" field.</summary>
    public const int ResultsUriFieldNumber = 3;
    private string resultsUri_ = "";
    /// <summary>
    /// URI to the test results in the Firebase Web Console.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResultsUri {
      get { return resultsUri_; }
      set {
        resultsUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gcs_path" field.</summary>
    public const int GcsPathFieldNumber = 4;
    private string gcsPath_ = "";
    /// <summary>
    /// Location in Google Cloud Storage where test results are written to.
    /// In the form "gs://bucket/path/to/somewhere".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GcsPath {
      get { return gcsPath_; }
      set {
        gcsPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultStorage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultStorage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ToolResultsHistory != other.ToolResultsHistory) return false;
      if (ToolResultsExecution != other.ToolResultsExecution) return false;
      if (ResultsUri != other.ResultsUri) return false;
      if (GcsPath != other.GcsPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ToolResultsHistory.Length != 0) hash ^= ToolResultsHistory.GetHashCode();
      if (ToolResultsExecution.Length != 0) hash ^= ToolResultsExecution.GetHashCode();
      if (ResultsUri.Length != 0) hash ^= ResultsUri.GetHashCode();
      if (GcsPath.Length != 0) hash ^= GcsPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ToolResultsHistory.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ToolResultsHistory);
      }
      if (ToolResultsExecution.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ToolResultsExecution);
      }
      if (ResultsUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultsUri);
      }
      if (GcsPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GcsPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ToolResultsHistory.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ToolResultsHistory);
      }
      if (ToolResultsExecution.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ToolResultsExecution);
      }
      if (ResultsUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultsUri);
      }
      if (GcsPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GcsPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ToolResultsHistory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToolResultsHistory);
      }
      if (ToolResultsExecution.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToolResultsExecution);
      }
      if (ResultsUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultsUri);
      }
      if (GcsPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcsPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultStorage other) {
      if (other == null) {
        return;
      }
      if (other.ToolResultsHistory.Length != 0) {
        ToolResultsHistory = other.ToolResultsHistory;
      }
      if (other.ToolResultsExecution.Length != 0) {
        ToolResultsExecution = other.ToolResultsExecution;
      }
      if (other.ResultsUri.Length != 0) {
        ResultsUri = other.ResultsUri;
      }
      if (other.GcsPath.Length != 0) {
        GcsPath = other.GcsPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ToolResultsHistory = input.ReadString();
            break;
          }
          case 18: {
            ToolResultsExecution = input.ReadString();
            break;
          }
          case 26: {
            ResultsUri = input.ReadString();
            break;
          }
          case 34: {
            GcsPath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ToolResultsHistory = input.ReadString();
            break;
          }
          case 18: {
            ToolResultsExecution = input.ReadString();
            break;
          }
          case 26: {
            ResultsUri = input.ReadString();
            break;
          }
          case 34: {
            GcsPath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
