// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/events/cloud/cloudbuild/v1/data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Events.Protobuf.Cloud.CloudBuild.V1 {

  /// <summary>Holder for reflection information generated from google/events/cloud/cloudbuild/v1/data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for google/events/cloud/cloudbuild/v1/data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvZXZlbnRzL2Nsb3VkL2Nsb3VkYnVpbGQvdjEvZGF0YS5wcm90",
            "bxIhZ29vZ2xlLmV2ZW50cy5jbG91ZC5jbG91ZGJ1aWxkLnYxGh5nb29nbGUv",
            "cHJvdG9idWYvZHVyYXRpb24ucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1l",
            "c3RhbXAucHJvdG8i7AoKDkJ1aWxkRXZlbnREYXRhEgoKAmlkGAEgASgJEhIK",
            "CnByb2plY3RfaWQYECABKAkSSAoGc3RhdHVzGAIgASgOMjguZ29vZ2xlLmV2",
            "ZW50cy5jbG91ZC5jbG91ZGJ1aWxkLnYxLkJ1aWxkRXZlbnREYXRhLlN0YXR1",
            "cxIVCg1zdGF0dXNfZGV0YWlsGBggASgJEjkKBnNvdXJjZRgDIAEoCzIpLmdv",
            "b2dsZS5ldmVudHMuY2xvdWQuY2xvdWRidWlsZC52MS5Tb3VyY2USOwoFc3Rl",
            "cHMYCyADKAsyLC5nb29nbGUuZXZlbnRzLmNsb3VkLmNsb3VkYnVpbGQudjEu",
            "QnVpbGRTdGVwEjsKB3Jlc3VsdHMYCiABKAsyKi5nb29nbGUuZXZlbnRzLmNs",
            "b3VkLmNsb3VkYnVpbGQudjEuUmVzdWx0cxIvCgtjcmVhdGVfdGltZRgGIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKc3RhcnRfdGltZRgH",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLZmluaXNoX3Rp",
            "bWUYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEioKB3RpbWVv",
            "dXQYDCABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SDgoGaW1hZ2Vz",
            "GA0gAygJEiwKCXF1ZXVlX3R0bBgoIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5E",
            "dXJhdGlvbhI/CglhcnRpZmFjdHMYJSABKAsyLC5nb29nbGUuZXZlbnRzLmNs",
            "b3VkLmNsb3VkYnVpbGQudjEuQXJ0aWZhY3RzEhMKC2xvZ3NfYnVja2V0GBMg",
            "ASgJEk4KEXNvdXJjZV9wcm92ZW5hbmNlGBUgASgLMjMuZ29vZ2xlLmV2ZW50",
            "cy5jbG91ZC5jbG91ZGJ1aWxkLnYxLlNvdXJjZVByb3ZlbmFuY2USGAoQYnVp",
            "bGRfdHJpZ2dlcl9pZBgWIAEoCRJACgdvcHRpb25zGBcgASgLMi8uZ29vZ2xl",
            "LmV2ZW50cy5jbG91ZC5jbG91ZGJ1aWxkLnYxLkJ1aWxkT3B0aW9ucxIPCgds",
            "b2dfdXJsGBkgASgJElsKDXN1YnN0aXR1dGlvbnMYHSADKAsyRC5nb29nbGUu",
            "ZXZlbnRzLmNsb3VkLmNsb3VkYnVpbGQudjEuQnVpbGRFdmVudERhdGEuU3Vi",
            "c3RpdHV0aW9uc0VudHJ5EgwKBHRhZ3MYHyADKAkSOgoHc2VjcmV0cxggIAMo",
            "CzIpLmdvb2dsZS5ldmVudHMuY2xvdWQuY2xvdWRidWlsZC52MS5TZWNyZXQS",
            "TQoGdGltaW5nGCEgAygLMj0uZ29vZ2xlLmV2ZW50cy5jbG91ZC5jbG91ZGJ1",
            "aWxkLnYxLkJ1aWxkRXZlbnREYXRhLlRpbWluZ0VudHJ5GjQKElN1YnN0aXR1",
            "dGlvbnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGloK",
            "C1RpbWluZ0VudHJ5EgsKA2tleRgBIAEoCRI6CgV2YWx1ZRgCIAEoCzIrLmdv",
            "b2dsZS5ldmVudHMuY2xvdWQuY2xvdWRidWlsZC52MS5UaW1lU3BhbjoCOAEi",
            "jAEKBlN0YXR1cxISCg5TVEFUVVNfVU5LTk9XThAAEgoKBlFVRVVFRBABEgsK",
            "B1dPUktJTkcQAhILCgdTVUNDRVNTEAMSCwoHRkFJTFVSRRAEEhIKDklOVEVS",
            "TkFMX0VSUk9SEAUSCwoHVElNRU9VVBAGEg0KCUNBTkNFTExFRBAHEgsKB0VY",
            "UElSRUQQCSKkAQoGU291cmNlEkoKDnN0b3JhZ2Vfc291cmNlGAIgASgLMjAu",
            "Z29vZ2xlLmV2ZW50cy5jbG91ZC5jbG91ZGJ1aWxkLnYxLlN0b3JhZ2VTb3Vy",
            "Y2VIABJECgtyZXBvX3NvdXJjZRgDIAEoCzItLmdvb2dsZS5ldmVudHMuY2xv",
            "dWQuY2xvdWRidWlsZC52MS5SZXBvU291cmNlSABCCAoGc291cmNlIkMKDVN0",
            "b3JhZ2VTb3VyY2USDgoGYnVja2V0GAEgASgJEg4KBm9iamVjdBgCIAEoCRIS",
            "CgpnZW5lcmF0aW9uGAMgASgDIrICCgpSZXBvU291cmNlEhIKCnByb2plY3Rf",
            "aWQYASABKAkSEQoJcmVwb19uYW1lGAIgASgJEhUKC2JyYW5jaF9uYW1lGAMg",
            "ASgJSAASEgoIdGFnX25hbWUYBCABKAlIABIUCgpjb21taXRfc2hhGAUgASgJ",
            "SAASCwoDZGlyGAcgASgJEhQKDGludmVydF9yZWdleBgIIAEoCBJXCg1zdWJz",
            "dGl0dXRpb25zGAkgAygLMkAuZ29vZ2xlLmV2ZW50cy5jbG91ZC5jbG91ZGJ1",
            "aWxkLnYxLlJlcG9Tb3VyY2UuU3Vic3RpdHV0aW9uc0VudHJ5GjQKElN1YnN0",
            "aXR1dGlvbnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgB",
            "QgoKCHJldmlzaW9uIrgDCglCdWlsZFN0ZXASDAoEbmFtZRgBIAEoCRILCgNl",
            "bnYYAiADKAkSDAoEYXJncxgDIAMoCRILCgNkaXIYBCABKAkSCgoCaWQYBSAB",
            "KAkSEAoId2FpdF9mb3IYBiADKAkSEgoKZW50cnlwb2ludBgHIAEoCRISCgpz",
            "ZWNyZXRfZW52GAggAygJEjoKB3ZvbHVtZXMYCSADKAsyKS5nb29nbGUuZXZl",
            "bnRzLmNsb3VkLmNsb3VkYnVpbGQudjEuVm9sdW1lEjsKBnRpbWluZxgKIAEo",
            "CzIrLmdvb2dsZS5ldmVudHMuY2xvdWQuY2xvdWRidWlsZC52MS5UaW1lU3Bh",
            "bhJACgtwdWxsX3RpbWluZxgNIAEoCzIrLmdvb2dsZS5ldmVudHMuY2xvdWQu",
            "Y2xvdWRidWlsZC52MS5UaW1lU3BhbhIqCgd0aW1lb3V0GAsgASgLMhkuZ29v",
            "Z2xlLnByb3RvYnVmLkR1cmF0aW9uEkgKBnN0YXR1cxgMIAEoDjI4Lmdvb2ds",
            "ZS5ldmVudHMuY2xvdWQuY2xvdWRidWlsZC52MS5CdWlsZEV2ZW50RGF0YS5T",
            "dGF0dXMiJAoGVm9sdW1lEgwKBG5hbWUYASABKAkSDAoEcGF0aBgCIAEoCSL3",
            "AQoHUmVzdWx0cxI9CgZpbWFnZXMYAiADKAsyLS5nb29nbGUuZXZlbnRzLmNs",
            "b3VkLmNsb3VkYnVpbGQudjEuQnVpbHRJbWFnZRIZChFidWlsZF9zdGVwX2lt",
            "YWdlcxgDIAMoCRIZChFhcnRpZmFjdF9tYW5pZmVzdBgEIAEoCRIVCg1udW1f",
            "YXJ0aWZhY3RzGAUgASgDEhoKEmJ1aWxkX3N0ZXBfb3V0cHV0cxgGIAMoDBJE",
            "Cg9hcnRpZmFjdF90aW1pbmcYByABKAsyKy5nb29nbGUuZXZlbnRzLmNsb3Vk",
            "LmNsb3VkYnVpbGQudjEuVGltZVNwYW4ibAoKQnVpbHRJbWFnZRIMCgRuYW1l",
            "GAEgASgJEg4KBmRpZ2VzdBgDIAEoCRJACgtwdXNoX3RpbWluZxgEIAEoCzIr",
            "Lmdvb2dsZS5ldmVudHMuY2xvdWQuY2xvdWRidWlsZC52MS5UaW1lU3BhbiLb",
            "AQoJQXJ0aWZhY3RzEg4KBmltYWdlcxgBIAMoCRJNCgdvYmplY3RzGAIgASgL",
            "MjwuZ29vZ2xlLmV2ZW50cy5jbG91ZC5jbG91ZGJ1aWxkLnYxLkFydGlmYWN0",
            "cy5BcnRpZmFjdE9iamVjdHMabwoPQXJ0aWZhY3RPYmplY3RzEhAKCGxvY2F0",
            "aW9uGAEgASgJEg0KBXBhdGhzGAIgAygJEjsKBnRpbWluZxgDIAEoCzIrLmdv",
            "b2dsZS5ldmVudHMuY2xvdWQuY2xvdWRidWlsZC52MS5UaW1lU3BhbiJoCghU",
            "aW1lU3BhbhIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXAi7gIKEFNvdXJjZVByb3ZlbmFuY2USUQoXcmVzb2x2ZWRf",
            "c3RvcmFnZV9zb3VyY2UYAyABKAsyMC5nb29nbGUuZXZlbnRzLmNsb3VkLmNs",
            "b3VkYnVpbGQudjEuU3RvcmFnZVNvdXJjZRJLChRyZXNvbHZlZF9yZXBvX3Nv",
            "dXJjZRgGIAEoCzItLmdvb2dsZS5ldmVudHMuY2xvdWQuY2xvdWRidWlsZC52",
            "MS5SZXBvU291cmNlElgKC2ZpbGVfaGFzaGVzGAQgAygLMkMuZ29vZ2xlLmV2",
            "ZW50cy5jbG91ZC5jbG91ZGJ1aWxkLnYxLlNvdXJjZVByb3ZlbmFuY2UuRmls",
            "ZUhhc2hlc0VudHJ5GmAKD0ZpbGVIYXNoZXNFbnRyeRILCgNrZXkYASABKAkS",
            "PAoFdmFsdWUYAiABKAsyLS5nb29nbGUuZXZlbnRzLmNsb3VkLmNsb3VkYnVp",
            "bGQudjEuRmlsZUhhc2hlczoCOAEiSAoKRmlsZUhhc2hlcxI6CglmaWxlX2hh",
            "c2gYASADKAsyJy5nb29nbGUuZXZlbnRzLmNsb3VkLmNsb3VkYnVpbGQudjEu",
            "SGFzaCKAAQoESGFzaBI+CgR0eXBlGAEgASgOMjAuZ29vZ2xlLmV2ZW50cy5j",
            "bG91ZC5jbG91ZGJ1aWxkLnYxLkhhc2guSGFzaFR5cGUSDQoFdmFsdWUYAiAB",
            "KAwiKQoISGFzaFR5cGUSCAoETk9ORRAAEgoKBlNIQTI1NhABEgcKA01ENRAC",
            "Ip4BCgZTZWNyZXQSFAoMa21zX2tleV9uYW1lGAEgASgJEkwKCnNlY3JldF9l",
            "bnYYAyADKAsyOC5nb29nbGUuZXZlbnRzLmNsb3VkLmNsb3VkYnVpbGQudjEu",
            "U2VjcmV0LlNlY3JldEVudkVudHJ5GjAKDlNlY3JldEVudkVudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoDDoCOAEi4gcKDEJ1aWxkT3B0aW9ucxJQ",
            "ChZzb3VyY2VfcHJvdmVuYW5jZV9oYXNoGAEgAygOMjAuZ29vZ2xlLmV2ZW50",
            "cy5jbG91ZC5jbG91ZGJ1aWxkLnYxLkhhc2guSGFzaFR5cGUSXQoXcmVxdWVz",
            "dGVkX3ZlcmlmeV9vcHRpb24YAiABKA4yPC5nb29nbGUuZXZlbnRzLmNsb3Vk",
            "LmNsb3VkYnVpbGQudjEuQnVpbGRPcHRpb25zLlZlcmlmeU9wdGlvbhJRCgxt",
            "YWNoaW5lX3R5cGUYAyABKA4yOy5nb29nbGUuZXZlbnRzLmNsb3VkLmNsb3Vk",
            "YnVpbGQudjEuQnVpbGRPcHRpb25zLk1hY2hpbmVUeXBlEhQKDGRpc2tfc2l6",
            "ZV9nYhgGIAEoAxJfChNzdWJzdGl0dXRpb25fb3B0aW9uGAQgASgOMkIuZ29v",
            "Z2xlLmV2ZW50cy5jbG91ZC5jbG91ZGJ1aWxkLnYxLkJ1aWxkT3B0aW9ucy5T",
            "dWJzdGl0dXRpb25PcHRpb24SYAoUbG9nX3N0cmVhbWluZ19vcHRpb24YBSAB",
            "KA4yQi5nb29nbGUuZXZlbnRzLmNsb3VkLmNsb3VkYnVpbGQudjEuQnVpbGRP",
            "cHRpb25zLkxvZ1N0cmVhbWluZ09wdGlvbhITCgt3b3JrZXJfcG9vbBgHIAEo",
            "CRJMCgdsb2dnaW5nGAsgASgOMjsuZ29vZ2xlLmV2ZW50cy5jbG91ZC5jbG91",
            "ZGJ1aWxkLnYxLkJ1aWxkT3B0aW9ucy5Mb2dnaW5nTW9kZRILCgNlbnYYDCAD",
            "KAkSEgoKc2VjcmV0X2VudhgNIAMoCRI6Cgd2b2x1bWVzGA4gAygLMikuZ29v",
            "Z2xlLmV2ZW50cy5jbG91ZC5jbG91ZGJ1aWxkLnYxLlZvbHVtZSIuCgxWZXJp",
            "ZnlPcHRpb24SEAoMTk9UX1ZFUklGSUVEEAASDAoIVkVSSUZJRUQQASJDCgtN",
            "YWNoaW5lVHlwZRIPCgtVTlNQRUNJRklFRBAAEhAKDE4xX0hJR0hDUFVfOBAB",
            "EhEKDU4xX0hJR0hDUFVfMzIQAiI1ChJTdWJzdGl0dXRpb25PcHRpb24SDgoK",
            "TVVTVF9NQVRDSBAAEg8KC0FMTE9XX0xPT1NFEAEiRwoSTG9nU3RyZWFtaW5n",
            "T3B0aW9uEhIKDlNUUkVBTV9ERUZBVUxUEAASDQoJU1RSRUFNX09OEAESDgoK",
            "U1RSRUFNX09GRhACIkAKC0xvZ2dpbmdNb2RlEhcKE0xPR0dJTkdfVU5TUEVD",
            "SUZJRUQQABIKCgZMRUdBQ1kQARIMCghHQ1NfT05MWRACQi2qAipHb29nbGUu",
            "RXZlbnRzLlByb3RvYnVmLkNsb3VkLkNsb3VkQnVpbGQuVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Parser, new[]{ "Id", "ProjectId", "Status", "StatusDetail", "Source", "Steps", "Results", "CreateTime", "StartTime", "FinishTime", "Timeout", "Images", "QueueTtl", "Artifacts", "LogsBucket", "SourceProvenance", "BuildTriggerId", "Options", "LogUrl", "Substitutions", "Tags", "Secrets", "Timing" }, null, new[]{ typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status) }, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Source), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Source.Parser, new[]{ "StorageSource", "RepoSource" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource.Parser, new[]{ "Bucket", "Object", "Generation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource.Parser, new[]{ "ProjectId", "RepoName", "BranchName", "TagName", "CommitSha", "Dir", "InvertRegex", "Substitutions" }, new[]{ "Revision" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildStep), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildStep.Parser, new[]{ "Name", "Env", "Args", "Dir", "Id", "WaitFor", "Entrypoint", "SecretEnv", "Volumes", "Timing", "PullTiming", "Timeout", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume.Parser, new[]{ "Name", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Results), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Results.Parser, new[]{ "Images", "BuildStepImages", "ArtifactManifest", "NumArtifacts", "BuildStepOutputs", "ArtifactTiming" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuiltImage), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuiltImage.Parser, new[]{ "Name", "Digest", "PushTiming" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts.Parser, new[]{ "Images", "Objects" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts.Types.ArtifactObjects), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts.Types.ArtifactObjects.Parser, new[]{ "Location", "Paths", "Timing" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan.Parser, new[]{ "StartTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.SourceProvenance), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.SourceProvenance.Parser, new[]{ "ResolvedStorageSource", "ResolvedRepoSource", "FileHashes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.FileHashes), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.FileHashes.Parser, new[]{ "FileHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Parser, new[]{ "Type", "Value" }, null, new[]{ typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Secret), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Secret.Parser, new[]{ "KmsKeyName", "SecretEnv" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions), global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Parser, new[]{ "SourceProvenanceHash", "RequestedVerifyOption", "MachineType", "DiskSizeGb", "SubstitutionOption", "LogStreamingOption", "WorkerPool", "Logging", "Env", "SecretEnv", "Volumes" }, null, new[]{ typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.VerifyOption), typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.MachineType), typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.SubstitutionOption), typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LogStreamingOption), typeof(global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LoggingMode) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Build event data
  /// Common build format for Google Cloud Platform API operations.
  /// Copied from
  /// https://github.com/googleapis/googleapis/blob/master/google/devtools/cloudbuild/v1/cloudbuild.proto.
  /// </summary>
  public sealed partial class BuildEventData : pb::IMessage<BuildEventData> {
    private static readonly pb::MessageParser<BuildEventData> _parser = new pb::MessageParser<BuildEventData>(() => new BuildEventData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildEventData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildEventData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildEventData(BuildEventData other) : this() {
      id_ = other.id_;
      projectId_ = other.projectId_;
      status_ = other.status_;
      statusDetail_ = other.statusDetail_;
      source_ = other.source_ != null ? other.source_.Clone() : null;
      steps_ = other.steps_.Clone();
      results_ = other.results_ != null ? other.results_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      finishTime_ = other.finishTime_ != null ? other.finishTime_.Clone() : null;
      timeout_ = other.timeout_ != null ? other.timeout_.Clone() : null;
      images_ = other.images_.Clone();
      queueTtl_ = other.queueTtl_ != null ? other.queueTtl_.Clone() : null;
      artifacts_ = other.artifacts_ != null ? other.artifacts_.Clone() : null;
      logsBucket_ = other.logsBucket_;
      sourceProvenance_ = other.sourceProvenance_ != null ? other.sourceProvenance_.Clone() : null;
      buildTriggerId_ = other.buildTriggerId_;
      options_ = other.options_ != null ? other.options_.Clone() : null;
      logUrl_ = other.logUrl_;
      substitutions_ = other.substitutions_.Clone();
      tags_ = other.tags_.Clone();
      secrets_ = other.secrets_.Clone();
      timing_ = other.timing_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildEventData Clone() {
      return new BuildEventData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Unique identifier of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 16;
    private string projectId_ = "";
    /// <summary>
    /// ID of the project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status status_ = global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status.Unknown;
    /// <summary>
    /// Status of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "status_detail" field.</summary>
    public const int StatusDetailFieldNumber = 24;
    private string statusDetail_ = "";
    /// <summary>
    /// Customer-readable message about the current status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusDetail {
      get { return statusDetail_; }
      set {
        statusDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 3;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Source source_;
    /// <summary>
    /// The location of the source files to build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Source Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "steps" field.</summary>
    public const int StepsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildStep> _repeated_steps_codec
        = pb::FieldCodec.ForMessage(90, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildStep.Parser);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildStep> steps_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildStep>();
    /// <summary>
    /// The operations to be performed on the workspace.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildStep> Steps {
      get { return steps_; }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 10;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Results results_;
    /// <summary>
    /// Results of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Results Results {
      get { return results_; }
      set {
        results_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Time at which the request to create the build was received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Time at which execution of the build was started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "finish_time" field.</summary>
    public const int FinishTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp finishTime_;
    /// <summary>
    /// Time at which execution of the build was finished.
    ///
    /// The difference between finish_time and start_time is the duration of the
    /// build's execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FinishTime {
      get { return finishTime_; }
      set {
        finishTime_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Duration timeout_;
    /// <summary>
    /// Amount of time that this build should be allowed to run, to second
    /// granularity. If this amount of time elapses, work on the build will cease
    /// and the build status will be `TIMEOUT`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_images_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> images_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of images to be pushed upon the successful completion of all build
    /// steps.
    ///
    /// The images are pushed using the builder service account's credentials.
    ///
    /// The digests of the pushed images will be stored in the `Build` resource's
    /// results field.
    ///
    /// If any of the images fail to be pushed, the build status is marked
    /// `FAILURE`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "queue_ttl" field.</summary>
    public const int QueueTtlFieldNumber = 40;
    private global::Google.Protobuf.WellKnownTypes.Duration queueTtl_;
    /// <summary>
    /// TTL in queue for this build. If provided and the build is enqueued longer
    /// than this value, the build will expire and the build status will be
    /// `EXPIRED`.
    ///
    /// The TTL starts ticking from create_time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration QueueTtl {
      get { return queueTtl_; }
      set {
        queueTtl_ = value;
      }
    }

    /// <summary>Field number for the "artifacts" field.</summary>
    public const int ArtifactsFieldNumber = 37;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts artifacts_;
    /// <summary>
    /// Artifacts produced by the build that should be uploaded upon
    /// successful completion of all build steps.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts Artifacts {
      get { return artifacts_; }
      set {
        artifacts_ = value;
      }
    }

    /// <summary>Field number for the "logs_bucket" field.</summary>
    public const int LogsBucketFieldNumber = 19;
    private string logsBucket_ = "";
    /// <summary>
    /// Google Cloud Storage bucket where logs should be written (see
    /// [Bucket Name
    /// Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
    /// Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogsBucket {
      get { return logsBucket_; }
      set {
        logsBucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_provenance" field.</summary>
    public const int SourceProvenanceFieldNumber = 21;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.SourceProvenance sourceProvenance_;
    /// <summary>
    /// A permanent fixed identifier for source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.SourceProvenance SourceProvenance {
      get { return sourceProvenance_; }
      set {
        sourceProvenance_ = value;
      }
    }

    /// <summary>Field number for the "build_trigger_id" field.</summary>
    public const int BuildTriggerIdFieldNumber = 22;
    private string buildTriggerId_ = "";
    /// <summary>
    /// The ID of the `BuildTrigger` that triggered this build, if it
    /// was triggered automatically.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildTriggerId {
      get { return buildTriggerId_; }
      set {
        buildTriggerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 23;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions options_;
    /// <summary>
    /// Special options for this build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    /// <summary>Field number for the "log_url" field.</summary>
    public const int LogUrlFieldNumber = 25;
    private string logUrl_ = "";
    /// <summary>
    /// URL to logs for this build in Google Cloud Console.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogUrl {
      get { return logUrl_; }
      set {
        logUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "substitutions" field.</summary>
    public const int SubstitutionsFieldNumber = 29;
    private static readonly pbc::MapField<string, string>.Codec _map_substitutions_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 234);
    private readonly pbc::MapField<string, string> substitutions_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Substitutions data for `Build` resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Substitutions {
      get { return substitutions_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 31;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(250);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Tags for annotation of a `Build`. These are not docker tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "secrets" field.</summary>
    public const int SecretsFieldNumber = 32;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Secret> _repeated_secrets_codec
        = pb::FieldCodec.ForMessage(258, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Secret.Parser);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Secret> secrets_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Secret>();
    /// <summary>
    /// Secrets to decrypt using Cloud Key Management Service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Secret> Secrets {
      get { return secrets_; }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 33;
    private static readonly pbc::MapField<string, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan>.Codec _map_timing_codec
        = new pbc::MapField<string, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan.Parser), 266);
    private readonly pbc::MapField<string, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan> timing_ = new pbc::MapField<string, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan>();
    /// <summary>
    /// Stores timing information for phases of the build. Valid keys
    /// are:
    ///
    /// * BUILD: time to execute all build steps
    /// * PUSH: time to push all specified images.
    /// * FETCHSOURCE: time to fetch source.
    ///
    /// If the build does not specify source or images,
    /// these keys will not be included.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan> Timing {
      get { return timing_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildEventData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildEventData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ProjectId != other.ProjectId) return false;
      if (Status != other.Status) return false;
      if (StatusDetail != other.StatusDetail) return false;
      if (!object.Equals(Source, other.Source)) return false;
      if(!steps_.Equals(other.steps_)) return false;
      if (!object.Equals(Results, other.Results)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(FinishTime, other.FinishTime)) return false;
      if (!object.Equals(Timeout, other.Timeout)) return false;
      if(!images_.Equals(other.images_)) return false;
      if (!object.Equals(QueueTtl, other.QueueTtl)) return false;
      if (!object.Equals(Artifacts, other.Artifacts)) return false;
      if (LogsBucket != other.LogsBucket) return false;
      if (!object.Equals(SourceProvenance, other.SourceProvenance)) return false;
      if (BuildTriggerId != other.BuildTriggerId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      if (LogUrl != other.LogUrl) return false;
      if (!Substitutions.Equals(other.Substitutions)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!secrets_.Equals(other.secrets_)) return false;
      if (!Timing.Equals(other.Timing)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Status != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status.Unknown) hash ^= Status.GetHashCode();
      if (StatusDetail.Length != 0) hash ^= StatusDetail.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      hash ^= steps_.GetHashCode();
      if (results_ != null) hash ^= Results.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (finishTime_ != null) hash ^= FinishTime.GetHashCode();
      if (timeout_ != null) hash ^= Timeout.GetHashCode();
      hash ^= images_.GetHashCode();
      if (queueTtl_ != null) hash ^= QueueTtl.GetHashCode();
      if (artifacts_ != null) hash ^= Artifacts.GetHashCode();
      if (LogsBucket.Length != 0) hash ^= LogsBucket.GetHashCode();
      if (sourceProvenance_ != null) hash ^= SourceProvenance.GetHashCode();
      if (BuildTriggerId.Length != 0) hash ^= BuildTriggerId.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (LogUrl.Length != 0) hash ^= LogUrl.GetHashCode();
      hash ^= Substitutions.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= secrets_.GetHashCode();
      hash ^= Timing.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Status != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (source_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Source);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartTime);
      }
      if (finishTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FinishTime);
      }
      if (results_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Results);
      }
      steps_.WriteTo(output, _repeated_steps_codec);
      if (timeout_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Timeout);
      }
      images_.WriteTo(output, _repeated_images_codec);
      if (ProjectId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ProjectId);
      }
      if (LogsBucket.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(LogsBucket);
      }
      if (sourceProvenance_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(SourceProvenance);
      }
      if (BuildTriggerId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(BuildTriggerId);
      }
      if (options_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Options);
      }
      if (StatusDetail.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(StatusDetail);
      }
      if (LogUrl.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(LogUrl);
      }
      substitutions_.WriteTo(output, _map_substitutions_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      secrets_.WriteTo(output, _repeated_secrets_codec);
      timing_.WriteTo(output, _map_timing_codec);
      if (artifacts_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(Artifacts);
      }
      if (queueTtl_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(QueueTtl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ProjectId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Status != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StatusDetail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StatusDetail);
      }
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      size += steps_.CalculateSize(_repeated_steps_codec);
      if (results_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Results);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (finishTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinishTime);
      }
      if (timeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timeout);
      }
      size += images_.CalculateSize(_repeated_images_codec);
      if (queueTtl_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QueueTtl);
      }
      if (artifacts_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Artifacts);
      }
      if (LogsBucket.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LogsBucket);
      }
      if (sourceProvenance_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SourceProvenance);
      }
      if (BuildTriggerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BuildTriggerId);
      }
      if (options_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (LogUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LogUrl);
      }
      size += substitutions_.CalculateSize(_map_substitutions_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += secrets_.CalculateSize(_repeated_secrets_codec);
      size += timing_.CalculateSize(_map_timing_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildEventData other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Status != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status.Unknown) {
        Status = other.Status;
      }
      if (other.StatusDetail.Length != 0) {
        StatusDetail = other.StatusDetail;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          Source = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Source();
        }
        Source.MergeFrom(other.Source);
      }
      steps_.Add(other.steps_);
      if (other.results_ != null) {
        if (results_ == null) {
          Results = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Results();
        }
        Results.MergeFrom(other.Results);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.finishTime_ != null) {
        if (finishTime_ == null) {
          FinishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FinishTime.MergeFrom(other.FinishTime);
      }
      if (other.timeout_ != null) {
        if (timeout_ == null) {
          Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Timeout.MergeFrom(other.Timeout);
      }
      images_.Add(other.images_);
      if (other.queueTtl_ != null) {
        if (queueTtl_ == null) {
          QueueTtl = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        QueueTtl.MergeFrom(other.QueueTtl);
      }
      if (other.artifacts_ != null) {
        if (artifacts_ == null) {
          Artifacts = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts();
        }
        Artifacts.MergeFrom(other.Artifacts);
      }
      if (other.LogsBucket.Length != 0) {
        LogsBucket = other.LogsBucket;
      }
      if (other.sourceProvenance_ != null) {
        if (sourceProvenance_ == null) {
          SourceProvenance = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.SourceProvenance();
        }
        SourceProvenance.MergeFrom(other.SourceProvenance);
      }
      if (other.BuildTriggerId.Length != 0) {
        BuildTriggerId = other.BuildTriggerId;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.LogUrl.Length != 0) {
        LogUrl = other.LogUrl;
      }
      substitutions_.Add(other.substitutions_);
      tags_.Add(other.tags_);
      secrets_.Add(other.secrets_);
      timing_.Add(other.timing_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            if (source_ == null) {
              Source = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Source();
            }
            input.ReadMessage(Source);
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 66: {
            if (finishTime_ == null) {
              FinishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FinishTime);
            break;
          }
          case 82: {
            if (results_ == null) {
              Results = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Results();
            }
            input.ReadMessage(Results);
            break;
          }
          case 90: {
            steps_.AddEntriesFrom(input, _repeated_steps_codec);
            break;
          }
          case 98: {
            if (timeout_ == null) {
              Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Timeout);
            break;
          }
          case 106: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 130: {
            ProjectId = input.ReadString();
            break;
          }
          case 154: {
            LogsBucket = input.ReadString();
            break;
          }
          case 170: {
            if (sourceProvenance_ == null) {
              SourceProvenance = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.SourceProvenance();
            }
            input.ReadMessage(SourceProvenance);
            break;
          }
          case 178: {
            BuildTriggerId = input.ReadString();
            break;
          }
          case 186: {
            if (options_ == null) {
              Options = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions();
            }
            input.ReadMessage(Options);
            break;
          }
          case 194: {
            StatusDetail = input.ReadString();
            break;
          }
          case 202: {
            LogUrl = input.ReadString();
            break;
          }
          case 234: {
            substitutions_.AddEntriesFrom(input, _map_substitutions_codec);
            break;
          }
          case 250: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 258: {
            secrets_.AddEntriesFrom(input, _repeated_secrets_codec);
            break;
          }
          case 266: {
            timing_.AddEntriesFrom(input, _map_timing_codec);
            break;
          }
          case 298: {
            if (artifacts_ == null) {
              Artifacts = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts();
            }
            input.ReadMessage(Artifacts);
            break;
          }
          case 322: {
            if (queueTtl_ == null) {
              QueueTtl = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(QueueTtl);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BuildEventData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible status of a build or build step.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Status of the build is unknown.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Build or step is queued; work has not yet begun.
        /// </summary>
        [pbr::OriginalName("QUEUED")] Queued = 1,
        /// <summary>
        /// Build or step is being executed.
        /// </summary>
        [pbr::OriginalName("WORKING")] Working = 2,
        /// <summary>
        /// Build or step finished successfully.
        /// </summary>
        [pbr::OriginalName("SUCCESS")] Success = 3,
        /// <summary>
        /// Build or step failed to complete successfully.
        /// </summary>
        [pbr::OriginalName("FAILURE")] Failure = 4,
        /// <summary>
        /// Build or step failed due to an internal cause.
        /// </summary>
        [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 5,
        /// <summary>
        /// Build or step took longer than was allowed.
        /// </summary>
        [pbr::OriginalName("TIMEOUT")] Timeout = 6,
        /// <summary>
        /// Build or step was canceled by a user.
        /// </summary>
        [pbr::OriginalName("CANCELLED")] Cancelled = 7,
        /// <summary>
        /// Build was enqueued for longer than the value of `queue_ttl`.
        /// </summary>
        [pbr::OriginalName("EXPIRED")] Expired = 9,
      }

    }
    #endregion

  }

  public sealed partial class Source : pb::IMessage<Source> {
    private static readonly pb::MessageParser<Source> _parser = new pb::MessageParser<Source>(() => new Source());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Source> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source(Source other) : this() {
      switch (other.SourceCase) {
        case SourceOneofCase.StorageSource:
          StorageSource = other.StorageSource.Clone();
          break;
        case SourceOneofCase.RepoSource:
          RepoSource = other.RepoSource.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source Clone() {
      return new Source(this);
    }

    /// <summary>Field number for the "storage_source" field.</summary>
    public const int StorageSourceFieldNumber = 2;
    /// <summary>
    /// If provided, get the source from this location in Google Cloud Storage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource StorageSource {
      get { return sourceCase_ == SourceOneofCase.StorageSource ? (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.StorageSource;
      }
    }

    /// <summary>Field number for the "repo_source" field.</summary>
    public const int RepoSourceFieldNumber = 3;
    /// <summary>
    /// If provided, get the source from this location in a Cloud Source
    /// Repository.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource RepoSource {
      get { return sourceCase_ == SourceOneofCase.RepoSource ? (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.RepoSource;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      StorageSource = 2,
      RepoSource = 3,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Source);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Source other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StorageSource, other.StorageSource)) return false;
      if (!object.Equals(RepoSource, other.RepoSource)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.StorageSource) hash ^= StorageSource.GetHashCode();
      if (sourceCase_ == SourceOneofCase.RepoSource) hash ^= RepoSource.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sourceCase_ == SourceOneofCase.StorageSource) {
        output.WriteRawTag(18);
        output.WriteMessage(StorageSource);
      }
      if (sourceCase_ == SourceOneofCase.RepoSource) {
        output.WriteRawTag(26);
        output.WriteMessage(RepoSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.StorageSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorageSource);
      }
      if (sourceCase_ == SourceOneofCase.RepoSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RepoSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Source other) {
      if (other == null) {
        return;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.StorageSource:
          if (StorageSource == null) {
            StorageSource = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource();
          }
          StorageSource.MergeFrom(other.StorageSource);
          break;
        case SourceOneofCase.RepoSource:
          if (RepoSource == null) {
            RepoSource = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource();
          }
          RepoSource.MergeFrom(other.RepoSource);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource subBuilder = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource();
            if (sourceCase_ == SourceOneofCase.StorageSource) {
              subBuilder.MergeFrom(StorageSource);
            }
            input.ReadMessage(subBuilder);
            StorageSource = subBuilder;
            break;
          }
          case 26: {
            global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource subBuilder = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource();
            if (sourceCase_ == SourceOneofCase.RepoSource) {
              subBuilder.MergeFrom(RepoSource);
            }
            input.ReadMessage(subBuilder);
            RepoSource = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Location of the source in an archive file in Google Cloud Storage.
  /// </summary>
  public sealed partial class StorageSource : pb::IMessage<StorageSource> {
    private static readonly pb::MessageParser<StorageSource> _parser = new pb::MessageParser<StorageSource>(() => new StorageSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageSource(StorageSource other) : this() {
      bucket_ = other.bucket_;
      object_ = other.object_;
      generation_ = other.generation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageSource Clone() {
      return new StorageSource(this);
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 1;
    private string bucket_ = "";
    /// <summary>
    /// Google Cloud Storage bucket containing the source (see
    /// [Bucket Name
    /// Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bucket {
      get { return bucket_; }
      set {
        bucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 2;
    private string object_ = "";
    /// <summary>
    /// Google Cloud Storage object containing the source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Object {
      get { return object_; }
      set {
        object_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "generation" field.</summary>
    public const int GenerationFieldNumber = 3;
    private long generation_;
    /// <summary>
    /// Google Cloud Storage generation for the object. If the generation is
    /// omitted, the latest generation will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Generation {
      get { return generation_; }
      set {
        generation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bucket != other.Bucket) return false;
      if (Object != other.Object) return false;
      if (Generation != other.Generation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bucket.Length != 0) hash ^= Bucket.GetHashCode();
      if (Object.Length != 0) hash ^= Object.GetHashCode();
      if (Generation != 0L) hash ^= Generation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bucket.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bucket);
      }
      if (Object.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Object);
      }
      if (Generation != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Generation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bucket);
      }
      if (Object.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Object);
      }
      if (Generation != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Generation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageSource other) {
      if (other == null) {
        return;
      }
      if (other.Bucket.Length != 0) {
        Bucket = other.Bucket;
      }
      if (other.Object.Length != 0) {
        Object = other.Object;
      }
      if (other.Generation != 0L) {
        Generation = other.Generation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bucket = input.ReadString();
            break;
          }
          case 18: {
            Object = input.ReadString();
            break;
          }
          case 24: {
            Generation = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Location of the source in a Google Cloud Source Repository.
  /// </summary>
  public sealed partial class RepoSource : pb::IMessage<RepoSource> {
    private static readonly pb::MessageParser<RepoSource> _parser = new pb::MessageParser<RepoSource>(() => new RepoSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepoSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepoSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepoSource(RepoSource other) : this() {
      projectId_ = other.projectId_;
      repoName_ = other.repoName_;
      dir_ = other.dir_;
      invertRegex_ = other.invertRegex_;
      substitutions_ = other.substitutions_.Clone();
      switch (other.RevisionCase) {
        case RevisionOneofCase.BranchName:
          BranchName = other.BranchName;
          break;
        case RevisionOneofCase.TagName:
          TagName = other.TagName;
          break;
        case RevisionOneofCase.CommitSha:
          CommitSha = other.CommitSha;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepoSource Clone() {
      return new RepoSource(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// ID of the project that owns the Cloud Source Repository.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "repo_name" field.</summary>
    public const int RepoNameFieldNumber = 2;
    private string repoName_ = "";
    /// <summary>
    /// Name of the Cloud Source Repository.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepoName {
      get { return repoName_; }
      set {
        repoName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "branch_name" field.</summary>
    public const int BranchNameFieldNumber = 3;
    /// <summary>
    /// Regex matching branches to build.
    ///
    /// The syntax of the regular expressions accepted is the syntax accepted by
    /// RE2 and described at https://github.com/google/re2/wiki/Syntax
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BranchName {
      get { return revisionCase_ == RevisionOneofCase.BranchName ? (string) revision_ : ""; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        revisionCase_ = RevisionOneofCase.BranchName;
      }
    }

    /// <summary>Field number for the "tag_name" field.</summary>
    public const int TagNameFieldNumber = 4;
    /// <summary>
    /// Regex matching tags to build.
    ///
    /// The syntax of the regular expressions accepted is the syntax accepted by
    /// RE2 and described at https://github.com/google/re2/wiki/Syntax
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagName {
      get { return revisionCase_ == RevisionOneofCase.TagName ? (string) revision_ : ""; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        revisionCase_ = RevisionOneofCase.TagName;
      }
    }

    /// <summary>Field number for the "commit_sha" field.</summary>
    public const int CommitShaFieldNumber = 5;
    /// <summary>
    /// Explicit commit SHA to build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommitSha {
      get { return revisionCase_ == RevisionOneofCase.CommitSha ? (string) revision_ : ""; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        revisionCase_ = RevisionOneofCase.CommitSha;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 7;
    private string dir_ = "";
    /// <summary>
    /// Directory, relative to the source root, in which to run the build.
    ///
    /// This must be a relative path. If a step's `dir` is specified and is an
    /// absolute path, this value is ignored for that step's execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "invert_regex" field.</summary>
    public const int InvertRegexFieldNumber = 8;
    private bool invertRegex_;
    /// <summary>
    /// Only trigger a build if the revision regex does NOT match the revision
    /// regex.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InvertRegex {
      get { return invertRegex_; }
      set {
        invertRegex_ = value;
      }
    }

    /// <summary>Field number for the "substitutions" field.</summary>
    public const int SubstitutionsFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_substitutions_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<string, string> substitutions_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Substitutions to use in a triggered build.
    /// Should only be used with RunBuildTrigger
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Substitutions {
      get { return substitutions_; }
    }

    private object revision_;
    /// <summary>Enum of possible cases for the "revision" oneof.</summary>
    public enum RevisionOneofCase {
      None = 0,
      BranchName = 3,
      TagName = 4,
      CommitSha = 5,
    }
    private RevisionOneofCase revisionCase_ = RevisionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevisionOneofCase RevisionCase {
      get { return revisionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRevision() {
      revisionCase_ = RevisionOneofCase.None;
      revision_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepoSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepoSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (RepoName != other.RepoName) return false;
      if (BranchName != other.BranchName) return false;
      if (TagName != other.TagName) return false;
      if (CommitSha != other.CommitSha) return false;
      if (Dir != other.Dir) return false;
      if (InvertRegex != other.InvertRegex) return false;
      if (!Substitutions.Equals(other.Substitutions)) return false;
      if (RevisionCase != other.RevisionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (RepoName.Length != 0) hash ^= RepoName.GetHashCode();
      if (revisionCase_ == RevisionOneofCase.BranchName) hash ^= BranchName.GetHashCode();
      if (revisionCase_ == RevisionOneofCase.TagName) hash ^= TagName.GetHashCode();
      if (revisionCase_ == RevisionOneofCase.CommitSha) hash ^= CommitSha.GetHashCode();
      if (Dir.Length != 0) hash ^= Dir.GetHashCode();
      if (InvertRegex != false) hash ^= InvertRegex.GetHashCode();
      hash ^= Substitutions.GetHashCode();
      hash ^= (int) revisionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (RepoName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RepoName);
      }
      if (revisionCase_ == RevisionOneofCase.BranchName) {
        output.WriteRawTag(26);
        output.WriteString(BranchName);
      }
      if (revisionCase_ == RevisionOneofCase.TagName) {
        output.WriteRawTag(34);
        output.WriteString(TagName);
      }
      if (revisionCase_ == RevisionOneofCase.CommitSha) {
        output.WriteRawTag(42);
        output.WriteString(CommitSha);
      }
      if (Dir.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Dir);
      }
      if (InvertRegex != false) {
        output.WriteRawTag(64);
        output.WriteBool(InvertRegex);
      }
      substitutions_.WriteTo(output, _map_substitutions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (RepoName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepoName);
      }
      if (revisionCase_ == RevisionOneofCase.BranchName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BranchName);
      }
      if (revisionCase_ == RevisionOneofCase.TagName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TagName);
      }
      if (revisionCase_ == RevisionOneofCase.CommitSha) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommitSha);
      }
      if (Dir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dir);
      }
      if (InvertRegex != false) {
        size += 1 + 1;
      }
      size += substitutions_.CalculateSize(_map_substitutions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepoSource other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.RepoName.Length != 0) {
        RepoName = other.RepoName;
      }
      if (other.Dir.Length != 0) {
        Dir = other.Dir;
      }
      if (other.InvertRegex != false) {
        InvertRegex = other.InvertRegex;
      }
      substitutions_.Add(other.substitutions_);
      switch (other.RevisionCase) {
        case RevisionOneofCase.BranchName:
          BranchName = other.BranchName;
          break;
        case RevisionOneofCase.TagName:
          TagName = other.TagName;
          break;
        case RevisionOneofCase.CommitSha:
          CommitSha = other.CommitSha;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            RepoName = input.ReadString();
            break;
          }
          case 26: {
            BranchName = input.ReadString();
            break;
          }
          case 34: {
            TagName = input.ReadString();
            break;
          }
          case 42: {
            CommitSha = input.ReadString();
            break;
          }
          case 58: {
            Dir = input.ReadString();
            break;
          }
          case 64: {
            InvertRegex = input.ReadBool();
            break;
          }
          case 74: {
            substitutions_.AddEntriesFrom(input, _map_substitutions_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A step in the build pipeline.
  /// </summary>
  public sealed partial class BuildStep : pb::IMessage<BuildStep> {
    private static readonly pb::MessageParser<BuildStep> _parser = new pb::MessageParser<BuildStep>(() => new BuildStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildStep(BuildStep other) : this() {
      name_ = other.name_;
      env_ = other.env_.Clone();
      args_ = other.args_.Clone();
      dir_ = other.dir_;
      id_ = other.id_;
      waitFor_ = other.waitFor_.Clone();
      entrypoint_ = other.entrypoint_;
      secretEnv_ = other.secretEnv_.Clone();
      volumes_ = other.volumes_.Clone();
      timing_ = other.timing_ != null ? other.timing_.Clone() : null;
      pullTiming_ = other.pullTiming_ != null ? other.pullTiming_.Clone() : null;
      timeout_ = other.timeout_ != null ? other.timeout_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildStep Clone() {
      return new BuildStep(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the container image that will run this particular
    /// build step.
    ///
    /// If the image is available in the host's Docker daemon's cache, it
    /// will be run directly. If not, the host will attempt to pull the image
    /// first, using the builder service account's credentials if necessary.
    ///
    /// The Docker daemon's cache will already have the latest versions of all of
    /// the officially supported build steps
    /// ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)).
    /// The Docker daemon will also have cached many of the layers for some popular
    /// images, like "ubuntu", "debian", but they will be refreshed at the time you
    /// attempt to use them.
    ///
    /// If you built an image in a previous build step, it will be stored in the
    /// host's Docker daemon's cache and is available to use as the name for a
    /// later build step.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "env" field.</summary>
    public const int EnvFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_env_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> env_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of environment variable definitions to be used when running a step.
    ///
    /// The elements are of the form "KEY=VALUE" for the environment variable "KEY"
    /// being given the value "VALUE".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Env {
      get { return env_; }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_args_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> args_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of arguments that will be presented to the step when it is started.
    ///
    /// If the image used to run the step's container has an entrypoint, the `args`
    /// are used as arguments to that entrypoint. If the image does not define
    /// an entrypoint, the first element in args is used as the entrypoint,
    /// and the remainder will be used as arguments.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Args {
      get { return args_; }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 4;
    private string dir_ = "";
    /// <summary>
    /// Working directory to use when running this step's container.
    ///
    /// If this value is a relative path, it is relative to the build's working
    /// directory. If this value is absolute, it may be outside the build's working
    /// directory, in which case the contents of the path may not be persisted
    /// across build step executions, unless a `volume` for that path is specified.
    ///
    /// If the build specifies a `RepoSource` with `dir` and a step with a `dir`,
    /// which specifies an absolute path, the `RepoSource` `dir` is ignored for
    /// the step's execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private string id_ = "";
    /// <summary>
    /// Unique identifier for this build step, used in `wait_for` to
    /// reference this build step as a dependency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "wait_for" field.</summary>
    public const int WaitForFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_waitFor_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> waitFor_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The ID(s) of the step(s) that this build step depends on.
    /// This build step will not start until all the build steps in `wait_for`
    /// have completed successfully. If `wait_for` is empty, this build step will
    /// start when all previous build steps in the `Build.Steps` list have
    /// completed successfully.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> WaitFor {
      get { return waitFor_; }
    }

    /// <summary>Field number for the "entrypoint" field.</summary>
    public const int EntrypointFieldNumber = 7;
    private string entrypoint_ = "";
    /// <summary>
    /// Entrypoint to be used instead of the build step image's default entrypoint.
    /// If unset, the image's default entrypoint is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Entrypoint {
      get { return entrypoint_; }
      set {
        entrypoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_env" field.</summary>
    public const int SecretEnvFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_secretEnv_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> secretEnv_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of environment variables which are encrypted using a Cloud Key
    /// Management Service crypto key. These values must be specified in the
    /// build's `Secret`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SecretEnv {
      get { return secretEnv_; }
    }

    /// <summary>Field number for the "volumes" field.</summary>
    public const int VolumesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume> _repeated_volumes_codec
        = pb::FieldCodec.ForMessage(74, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume.Parser);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume> volumes_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume>();
    /// <summary>
    /// List of volumes to mount into the build step.
    ///
    /// Each volume is created as an empty volume prior to execution of the
    /// build step. Upon completion of the build, volumes and their contents are
    /// discarded.
    ///
    /// Using a named volume in only one step is not valid as it is indicative
    /// of a build request with an incorrect configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume> Volumes {
      get { return volumes_; }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 10;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan timing_;
    /// <summary>
    /// Stores timing information for executing this build step.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan Timing {
      get { return timing_; }
      set {
        timing_ = value;
      }
    }

    /// <summary>Field number for the "pull_timing" field.</summary>
    public const int PullTimingFieldNumber = 13;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan pullTiming_;
    /// <summary>
    /// Stores timing information for pulling this build step's
    /// builder image only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan PullTiming {
      get { return pullTiming_; }
      set {
        pullTiming_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Duration timeout_;
    /// <summary>
    /// Time limit for executing this build step. If not defined, the step has no
    /// time limit and will be allowed to continue to run until either it completes
    /// or the build itself times out.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 12;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status status_ = global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status.Unknown;
    /// <summary>
    /// Status of the build step. At this time, build step status is
    /// only updated on build completion; step status is not updated in real-time
    /// as the build progresses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!env_.Equals(other.env_)) return false;
      if(!args_.Equals(other.args_)) return false;
      if (Dir != other.Dir) return false;
      if (Id != other.Id) return false;
      if(!waitFor_.Equals(other.waitFor_)) return false;
      if (Entrypoint != other.Entrypoint) return false;
      if(!secretEnv_.Equals(other.secretEnv_)) return false;
      if(!volumes_.Equals(other.volumes_)) return false;
      if (!object.Equals(Timing, other.Timing)) return false;
      if (!object.Equals(PullTiming, other.PullTiming)) return false;
      if (!object.Equals(Timeout, other.Timeout)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= env_.GetHashCode();
      hash ^= args_.GetHashCode();
      if (Dir.Length != 0) hash ^= Dir.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= waitFor_.GetHashCode();
      if (Entrypoint.Length != 0) hash ^= Entrypoint.GetHashCode();
      hash ^= secretEnv_.GetHashCode();
      hash ^= volumes_.GetHashCode();
      if (timing_ != null) hash ^= Timing.GetHashCode();
      if (pullTiming_ != null) hash ^= PullTiming.GetHashCode();
      if (timeout_ != null) hash ^= Timeout.GetHashCode();
      if (Status != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status.Unknown) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      env_.WriteTo(output, _repeated_env_codec);
      args_.WriteTo(output, _repeated_args_codec);
      if (Dir.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Dir);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Id);
      }
      waitFor_.WriteTo(output, _repeated_waitFor_codec);
      if (Entrypoint.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Entrypoint);
      }
      secretEnv_.WriteTo(output, _repeated_secretEnv_codec);
      volumes_.WriteTo(output, _repeated_volumes_codec);
      if (timing_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Timing);
      }
      if (timeout_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Timeout);
      }
      if (Status != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status.Unknown) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Status);
      }
      if (pullTiming_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PullTiming);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += env_.CalculateSize(_repeated_env_codec);
      size += args_.CalculateSize(_repeated_args_codec);
      if (Dir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dir);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += waitFor_.CalculateSize(_repeated_waitFor_codec);
      if (Entrypoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Entrypoint);
      }
      size += secretEnv_.CalculateSize(_repeated_secretEnv_codec);
      size += volumes_.CalculateSize(_repeated_volumes_codec);
      if (timing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timing);
      }
      if (pullTiming_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PullTiming);
      }
      if (timeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timeout);
      }
      if (Status != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildStep other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      env_.Add(other.env_);
      args_.Add(other.args_);
      if (other.Dir.Length != 0) {
        Dir = other.Dir;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      waitFor_.Add(other.waitFor_);
      if (other.Entrypoint.Length != 0) {
        Entrypoint = other.Entrypoint;
      }
      secretEnv_.Add(other.secretEnv_);
      volumes_.Add(other.volumes_);
      if (other.timing_ != null) {
        if (timing_ == null) {
          Timing = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan();
        }
        Timing.MergeFrom(other.Timing);
      }
      if (other.pullTiming_ != null) {
        if (pullTiming_ == null) {
          PullTiming = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan();
        }
        PullTiming.MergeFrom(other.PullTiming);
      }
      if (other.timeout_ != null) {
        if (timeout_ == null) {
          Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Timeout.MergeFrom(other.Timeout);
      }
      if (other.Status != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status.Unknown) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            env_.AddEntriesFrom(input, _repeated_env_codec);
            break;
          }
          case 26: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
          case 34: {
            Dir = input.ReadString();
            break;
          }
          case 42: {
            Id = input.ReadString();
            break;
          }
          case 50: {
            waitFor_.AddEntriesFrom(input, _repeated_waitFor_codec);
            break;
          }
          case 58: {
            Entrypoint = input.ReadString();
            break;
          }
          case 66: {
            secretEnv_.AddEntriesFrom(input, _repeated_secretEnv_codec);
            break;
          }
          case 74: {
            volumes_.AddEntriesFrom(input, _repeated_volumes_codec);
            break;
          }
          case 82: {
            if (timing_ == null) {
              Timing = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 90: {
            if (timeout_ == null) {
              Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Timeout);
            break;
          }
          case 96: {
            Status = (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildEventData.Types.Status) input.ReadEnum();
            break;
          }
          case 106: {
            if (pullTiming_ == null) {
              PullTiming = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan();
            }
            input.ReadMessage(PullTiming);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Volume describes a Docker container volume which is mounted into build steps
  /// in order to persist files across build step execution.
  /// </summary>
  public sealed partial class Volume : pb::IMessage<Volume> {
    private static readonly pb::MessageParser<Volume> _parser = new pb::MessageParser<Volume>(() => new Volume());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Volume> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Volume() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Volume(Volume other) : this() {
      name_ = other.name_;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Volume Clone() {
      return new Volume(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the volume to mount.
    ///
    /// Volume names must be unique per build step and must be valid names for
    /// Docker volumes. Each named volume must be used by at least two build steps.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// Path at which to mount the volume.
    ///
    /// Paths must be absolute and cannot conflict with other volume paths on the
    /// same build step or with certain reserved volume paths.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Volume);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Volume other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Volume other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Artifacts created by the build pipeline.
  /// </summary>
  public sealed partial class Results : pb::IMessage<Results> {
    private static readonly pb::MessageParser<Results> _parser = new pb::MessageParser<Results>(() => new Results());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Results> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Results() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Results(Results other) : this() {
      images_ = other.images_.Clone();
      buildStepImages_ = other.buildStepImages_.Clone();
      artifactManifest_ = other.artifactManifest_;
      numArtifacts_ = other.numArtifacts_;
      buildStepOutputs_ = other.buildStepOutputs_.Clone();
      artifactTiming_ = other.artifactTiming_ != null ? other.artifactTiming_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Results Clone() {
      return new Results(this);
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuiltImage> _repeated_images_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuiltImage.Parser);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuiltImage> images_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuiltImage>();
    /// <summary>
    /// Container images that were built as a part of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuiltImage> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "build_step_images" field.</summary>
    public const int BuildStepImagesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_buildStepImages_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> buildStepImages_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of build step digests, in the order corresponding to build step
    /// indices.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BuildStepImages {
      get { return buildStepImages_; }
    }

    /// <summary>Field number for the "artifact_manifest" field.</summary>
    public const int ArtifactManifestFieldNumber = 4;
    private string artifactManifest_ = "";
    /// <summary>
    /// Path to the artifact manifest. Only populated when artifacts are uploaded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArtifactManifest {
      get { return artifactManifest_; }
      set {
        artifactManifest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num_artifacts" field.</summary>
    public const int NumArtifactsFieldNumber = 5;
    private long numArtifacts_;
    /// <summary>
    /// Number of artifacts uploaded. Only populated when artifacts are uploaded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumArtifacts {
      get { return numArtifacts_; }
      set {
        numArtifacts_ = value;
      }
    }

    /// <summary>Field number for the "build_step_outputs" field.</summary>
    public const int BuildStepOutputsFieldNumber = 6;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_buildStepOutputs_codec
        = pb::FieldCodec.ForBytes(50);
    private readonly pbc::RepeatedField<pb::ByteString> buildStepOutputs_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// List of build step outputs, produced by builder images, in the order
    /// corresponding to build step indices.
    ///
    /// [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders)
    /// can produce this output by writing to `$BUILDER_OUTPUT/output`.
    /// Only the first 4KB of data is stored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> BuildStepOutputs {
      get { return buildStepOutputs_; }
    }

    /// <summary>Field number for the "artifact_timing" field.</summary>
    public const int ArtifactTimingFieldNumber = 7;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan artifactTiming_;
    /// <summary>
    /// Time to push all non-container artifacts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan ArtifactTiming {
      get { return artifactTiming_; }
      set {
        artifactTiming_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Results);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Results other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!images_.Equals(other.images_)) return false;
      if(!buildStepImages_.Equals(other.buildStepImages_)) return false;
      if (ArtifactManifest != other.ArtifactManifest) return false;
      if (NumArtifacts != other.NumArtifacts) return false;
      if(!buildStepOutputs_.Equals(other.buildStepOutputs_)) return false;
      if (!object.Equals(ArtifactTiming, other.ArtifactTiming)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= images_.GetHashCode();
      hash ^= buildStepImages_.GetHashCode();
      if (ArtifactManifest.Length != 0) hash ^= ArtifactManifest.GetHashCode();
      if (NumArtifacts != 0L) hash ^= NumArtifacts.GetHashCode();
      hash ^= buildStepOutputs_.GetHashCode();
      if (artifactTiming_ != null) hash ^= ArtifactTiming.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      images_.WriteTo(output, _repeated_images_codec);
      buildStepImages_.WriteTo(output, _repeated_buildStepImages_codec);
      if (ArtifactManifest.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ArtifactManifest);
      }
      if (NumArtifacts != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(NumArtifacts);
      }
      buildStepOutputs_.WriteTo(output, _repeated_buildStepOutputs_codec);
      if (artifactTiming_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ArtifactTiming);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += images_.CalculateSize(_repeated_images_codec);
      size += buildStepImages_.CalculateSize(_repeated_buildStepImages_codec);
      if (ArtifactManifest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArtifactManifest);
      }
      if (NumArtifacts != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumArtifacts);
      }
      size += buildStepOutputs_.CalculateSize(_repeated_buildStepOutputs_codec);
      if (artifactTiming_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactTiming);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Results other) {
      if (other == null) {
        return;
      }
      images_.Add(other.images_);
      buildStepImages_.Add(other.buildStepImages_);
      if (other.ArtifactManifest.Length != 0) {
        ArtifactManifest = other.ArtifactManifest;
      }
      if (other.NumArtifacts != 0L) {
        NumArtifacts = other.NumArtifacts;
      }
      buildStepOutputs_.Add(other.buildStepOutputs_);
      if (other.artifactTiming_ != null) {
        if (artifactTiming_ == null) {
          ArtifactTiming = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan();
        }
        ArtifactTiming.MergeFrom(other.ArtifactTiming);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 26: {
            buildStepImages_.AddEntriesFrom(input, _repeated_buildStepImages_codec);
            break;
          }
          case 34: {
            ArtifactManifest = input.ReadString();
            break;
          }
          case 40: {
            NumArtifacts = input.ReadInt64();
            break;
          }
          case 50: {
            buildStepOutputs_.AddEntriesFrom(input, _repeated_buildStepOutputs_codec);
            break;
          }
          case 58: {
            if (artifactTiming_ == null) {
              ArtifactTiming = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan();
            }
            input.ReadMessage(ArtifactTiming);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An image built by the pipeline.
  /// </summary>
  public sealed partial class BuiltImage : pb::IMessage<BuiltImage> {
    private static readonly pb::MessageParser<BuiltImage> _parser = new pb::MessageParser<BuiltImage>(() => new BuiltImage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuiltImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuiltImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuiltImage(BuiltImage other) : this() {
      name_ = other.name_;
      digest_ = other.digest_;
      pushTiming_ = other.pushTiming_ != null ? other.pushTiming_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuiltImage Clone() {
      return new BuiltImage(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name used to push the container image to Google Container Registry, as
    /// presented to `docker push`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 3;
    private string digest_ = "";
    /// <summary>
    /// Docker Registry 2.0 digest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Digest {
      get { return digest_; }
      set {
        digest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "push_timing" field.</summary>
    public const int PushTimingFieldNumber = 4;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan pushTiming_;
    /// <summary>
    /// Stores timing information for pushing the specified image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan PushTiming {
      get { return pushTiming_; }
      set {
        pushTiming_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuiltImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuiltImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Digest != other.Digest) return false;
      if (!object.Equals(PushTiming, other.PushTiming)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Digest.Length != 0) hash ^= Digest.GetHashCode();
      if (pushTiming_ != null) hash ^= PushTiming.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Digest.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Digest);
      }
      if (pushTiming_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PushTiming);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Digest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Digest);
      }
      if (pushTiming_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PushTiming);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuiltImage other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Digest.Length != 0) {
        Digest = other.Digest;
      }
      if (other.pushTiming_ != null) {
        if (pushTiming_ == null) {
          PushTiming = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan();
        }
        PushTiming.MergeFrom(other.PushTiming);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Digest = input.ReadString();
            break;
          }
          case 34: {
            if (pushTiming_ == null) {
              PushTiming = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan();
            }
            input.ReadMessage(PushTiming);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Artifacts produced by a build that should be uploaded upon
  /// successful completion of all build steps.
  /// </summary>
  public sealed partial class Artifacts : pb::IMessage<Artifacts> {
    private static readonly pb::MessageParser<Artifacts> _parser = new pb::MessageParser<Artifacts>(() => new Artifacts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Artifacts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifacts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifacts(Artifacts other) : this() {
      images_ = other.images_.Clone();
      objects_ = other.objects_ != null ? other.objects_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifacts Clone() {
      return new Artifacts(this);
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_images_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> images_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of images to be pushed upon the successful completion of all build
    /// steps.
    ///
    /// The images will be pushed using the builder service account's credentials.
    ///
    /// The digests of the pushed images will be stored in the Build resource's
    /// results field.
    ///
    /// If any of the images fail to be pushed, the build is marked FAILURE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "objects" field.</summary>
    public const int ObjectsFieldNumber = 2;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts.Types.ArtifactObjects objects_;
    /// <summary>
    /// A list of objects to be uploaded to Cloud Storage upon successful
    /// completion of all build steps.
    ///
    /// Files in the workspace matching specified paths globs will be uploaded to
    /// the specified Cloud Storage location using the builder service account's
    /// credentials.
    ///
    /// The location and generation of the uploaded objects will be stored in the
    /// Build resource's results field.
    ///
    /// If any objects fail to be pushed, the build is marked FAILURE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts.Types.ArtifactObjects Objects {
      get { return objects_; }
      set {
        objects_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Artifacts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Artifacts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!images_.Equals(other.images_)) return false;
      if (!object.Equals(Objects, other.Objects)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= images_.GetHashCode();
      if (objects_ != null) hash ^= Objects.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      images_.WriteTo(output, _repeated_images_codec);
      if (objects_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Objects);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += images_.CalculateSize(_repeated_images_codec);
      if (objects_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Objects);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Artifacts other) {
      if (other == null) {
        return;
      }
      images_.Add(other.images_);
      if (other.objects_ != null) {
        if (objects_ == null) {
          Objects = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts.Types.ArtifactObjects();
        }
        Objects.MergeFrom(other.Objects);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 18: {
            if (objects_ == null) {
              Objects = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts.Types.ArtifactObjects();
            }
            input.ReadMessage(Objects);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Artifacts message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Files in the workspace to upload to Cloud Storage upon successful
      /// completion of all build steps.
      /// </summary>
      public sealed partial class ArtifactObjects : pb::IMessage<ArtifactObjects> {
        private static readonly pb::MessageParser<ArtifactObjects> _parser = new pb::MessageParser<ArtifactObjects>(() => new ArtifactObjects());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ArtifactObjects> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Artifacts.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ArtifactObjects() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ArtifactObjects(ArtifactObjects other) : this() {
          location_ = other.location_;
          paths_ = other.paths_.Clone();
          timing_ = other.timing_ != null ? other.timing_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ArtifactObjects Clone() {
          return new ArtifactObjects(this);
        }

        /// <summary>Field number for the "location" field.</summary>
        public const int LocationFieldNumber = 1;
        private string location_ = "";
        /// <summary>
        /// Cloud Storage bucket and optional object path, in the form
        /// "gs://bucket/path/to/somewhere/". (see [Bucket Name
        /// Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
        ///
        /// Files in the workspace matching any path pattern will be uploaded to
        /// Cloud Storage with this location as a prefix.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Location {
          get { return location_; }
          set {
            location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "paths" field.</summary>
        public const int PathsFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_paths_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> paths_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Path globs used to match files in the build's workspace.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Paths {
          get { return paths_; }
        }

        /// <summary>Field number for the "timing" field.</summary>
        public const int TimingFieldNumber = 3;
        private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan timing_;
        /// <summary>
        /// Stores timing information for pushing all artifact objects.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan Timing {
          get { return timing_; }
          set {
            timing_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ArtifactObjects);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ArtifactObjects other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Location != other.Location) return false;
          if(!paths_.Equals(other.paths_)) return false;
          if (!object.Equals(Timing, other.Timing)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Location.Length != 0) hash ^= Location.GetHashCode();
          hash ^= paths_.GetHashCode();
          if (timing_ != null) hash ^= Timing.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Location.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Location);
          }
          paths_.WriteTo(output, _repeated_paths_codec);
          if (timing_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Timing);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Location.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
          }
          size += paths_.CalculateSize(_repeated_paths_codec);
          if (timing_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timing);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ArtifactObjects other) {
          if (other == null) {
            return;
          }
          if (other.Location.Length != 0) {
            Location = other.Location;
          }
          paths_.Add(other.paths_);
          if (other.timing_ != null) {
            if (timing_ == null) {
              Timing = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan();
            }
            Timing.MergeFrom(other.Timing);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Location = input.ReadString();
                break;
              }
              case 18: {
                paths_.AddEntriesFrom(input, _repeated_paths_codec);
                break;
              }
              case 26: {
                if (timing_ == null) {
                  Timing = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.TimeSpan();
                }
                input.ReadMessage(Timing);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Start and end times for a build execution phase.
  /// </summary>
  public sealed partial class TimeSpan : pb::IMessage<TimeSpan> {
    private static readonly pb::MessageParser<TimeSpan> _parser = new pb::MessageParser<TimeSpan>(() => new TimeSpan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeSpan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSpan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSpan(TimeSpan other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSpan Clone() {
      return new TimeSpan(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Start of time span.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// End of time span.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeSpan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeSpan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeSpan other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Provenance of the source. Ways to find the original source, or verify that
  /// some source was used for this build.
  /// </summary>
  public sealed partial class SourceProvenance : pb::IMessage<SourceProvenance> {
    private static readonly pb::MessageParser<SourceProvenance> _parser = new pb::MessageParser<SourceProvenance>(() => new SourceProvenance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SourceProvenance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceProvenance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceProvenance(SourceProvenance other) : this() {
      resolvedStorageSource_ = other.resolvedStorageSource_ != null ? other.resolvedStorageSource_.Clone() : null;
      resolvedRepoSource_ = other.resolvedRepoSource_ != null ? other.resolvedRepoSource_.Clone() : null;
      fileHashes_ = other.fileHashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceProvenance Clone() {
      return new SourceProvenance(this);
    }

    /// <summary>Field number for the "resolved_storage_source" field.</summary>
    public const int ResolvedStorageSourceFieldNumber = 3;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource resolvedStorageSource_;
    /// <summary>
    /// A copy of the build's `source.storage_source`, if exists, with any
    /// generations resolved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource ResolvedStorageSource {
      get { return resolvedStorageSource_; }
      set {
        resolvedStorageSource_ = value;
      }
    }

    /// <summary>Field number for the "resolved_repo_source" field.</summary>
    public const int ResolvedRepoSourceFieldNumber = 6;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource resolvedRepoSource_;
    /// <summary>
    /// A copy of the build's `source.repo_source`, if exists, with any
    /// revisions resolved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource ResolvedRepoSource {
      get { return resolvedRepoSource_; }
      set {
        resolvedRepoSource_ = value;
      }
    }

    /// <summary>Field number for the "file_hashes" field.</summary>
    public const int FileHashesFieldNumber = 4;
    private static readonly pbc::MapField<string, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.FileHashes>.Codec _map_fileHashes_codec
        = new pbc::MapField<string, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.FileHashes>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.FileHashes.Parser), 34);
    private readonly pbc::MapField<string, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.FileHashes> fileHashes_ = new pbc::MapField<string, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.FileHashes>();
    /// <summary>
    /// Hash(es) of the build source, which can be used to verify that
    /// the original source integrity was maintained in the build. Note that
    /// `FileHashes` will only be populated if `BuildOptions` has requested a
    /// `SourceProvenanceHash`.
    ///
    /// The keys to this map are file paths used as build source and the values
    /// contain the hash values for those files.
    ///
    /// If the build source came in a single package such as a gzipped tarfile
    /// (`.tar.gz`), the `FileHash` will be for the single path to that file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.FileHashes> FileHashes {
      get { return fileHashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SourceProvenance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SourceProvenance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResolvedStorageSource, other.ResolvedStorageSource)) return false;
      if (!object.Equals(ResolvedRepoSource, other.ResolvedRepoSource)) return false;
      if (!FileHashes.Equals(other.FileHashes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resolvedStorageSource_ != null) hash ^= ResolvedStorageSource.GetHashCode();
      if (resolvedRepoSource_ != null) hash ^= ResolvedRepoSource.GetHashCode();
      hash ^= FileHashes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resolvedStorageSource_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResolvedStorageSource);
      }
      fileHashes_.WriteTo(output, _map_fileHashes_codec);
      if (resolvedRepoSource_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ResolvedRepoSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resolvedStorageSource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResolvedStorageSource);
      }
      if (resolvedRepoSource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResolvedRepoSource);
      }
      size += fileHashes_.CalculateSize(_map_fileHashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SourceProvenance other) {
      if (other == null) {
        return;
      }
      if (other.resolvedStorageSource_ != null) {
        if (resolvedStorageSource_ == null) {
          ResolvedStorageSource = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource();
        }
        ResolvedStorageSource.MergeFrom(other.ResolvedStorageSource);
      }
      if (other.resolvedRepoSource_ != null) {
        if (resolvedRepoSource_ == null) {
          ResolvedRepoSource = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource();
        }
        ResolvedRepoSource.MergeFrom(other.ResolvedRepoSource);
      }
      fileHashes_.Add(other.fileHashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (resolvedStorageSource_ == null) {
              ResolvedStorageSource = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.StorageSource();
            }
            input.ReadMessage(ResolvedStorageSource);
            break;
          }
          case 34: {
            fileHashes_.AddEntriesFrom(input, _map_fileHashes_codec);
            break;
          }
          case 50: {
            if (resolvedRepoSource_ == null) {
              ResolvedRepoSource = new global::Google.Events.Protobuf.Cloud.CloudBuild.V1.RepoSource();
            }
            input.ReadMessage(ResolvedRepoSource);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Container message for hashes of byte content of files, used in
  /// SourceProvenance messages to verify integrity of source input to the build.
  /// </summary>
  public sealed partial class FileHashes : pb::IMessage<FileHashes> {
    private static readonly pb::MessageParser<FileHashes> _parser = new pb::MessageParser<FileHashes>(() => new FileHashes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileHashes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes(FileHashes other) : this() {
      fileHash_ = other.fileHash_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes Clone() {
      return new FileHashes(this);
    }

    /// <summary>Field number for the "file_hash" field.</summary>
    public const int FileHashFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash> _repeated_fileHash_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Parser);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash> fileHash_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash>();
    /// <summary>
    /// Collection of file hashes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash> FileHash {
      get { return fileHash_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileHashes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileHashes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fileHash_.Equals(other.fileHash_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fileHash_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fileHash_.WriteTo(output, _repeated_fileHash_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fileHash_.CalculateSize(_repeated_fileHash_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileHashes other) {
      if (other == null) {
        return;
      }
      fileHash_.Add(other.fileHash_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fileHash_.AddEntriesFrom(input, _repeated_fileHash_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Container message for hash values.
  /// </summary>
  public sealed partial class Hash : pb::IMessage<Hash> {
    private static readonly pb::MessageParser<Hash> _parser = new pb::MessageParser<Hash>(() => new Hash());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hash> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash(Hash other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash Clone() {
      return new Hash(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType type_ = global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType.None;
    /// <summary>
    /// The type of hash that was performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    /// <summary>
    /// The hash value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hash);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hash other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType.None) hash ^= Type.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hash other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType.None) {
        Type = other.Type;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType) input.ReadEnum();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Hash message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Specifies the hash algorithm, if any.
      /// </summary>
      public enum HashType {
        /// <summary>
        /// No hash requested.
        /// </summary>
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        /// Use a sha256 hash.
        /// </summary>
        [pbr::OriginalName("SHA256")] Sha256 = 1,
        /// <summary>
        /// Use a md5 hash.
        /// </summary>
        [pbr::OriginalName("MD5")] Md5 = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Pairs a set of secret environment variables containing encrypted
  /// values with the Cloud KMS key to use to decrypt the value.
  /// </summary>
  public sealed partial class Secret : pb::IMessage<Secret> {
    private static readonly pb::MessageParser<Secret> _parser = new pb::MessageParser<Secret>(() => new Secret());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Secret> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret(Secret other) : this() {
      kmsKeyName_ = other.kmsKeyName_;
      secretEnv_ = other.secretEnv_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret Clone() {
      return new Secret(this);
    }

    /// <summary>Field number for the "kms_key_name" field.</summary>
    public const int KmsKeyNameFieldNumber = 1;
    private string kmsKeyName_ = "";
    /// <summary>
    /// Cloud KMS key name to use to decrypt these envs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KmsKeyName {
      get { return kmsKeyName_; }
      set {
        kmsKeyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_env" field.</summary>
    public const int SecretEnvFieldNumber = 3;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_secretEnv_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 26);
    private readonly pbc::MapField<string, pb::ByteString> secretEnv_ = new pbc::MapField<string, pb::ByteString>();
    /// <summary>
    /// Map of environment variable name to its encrypted value.
    ///
    /// Secret environment variables must be unique across all of a build's
    /// secrets, and must be used by at least one build step. Values can be at most
    /// 64 KB in size. There can be at most 100 secret values across all of a
    /// build's secrets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, pb::ByteString> SecretEnv {
      get { return secretEnv_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Secret);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Secret other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KmsKeyName != other.KmsKeyName) return false;
      if (!SecretEnv.Equals(other.SecretEnv)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (KmsKeyName.Length != 0) hash ^= KmsKeyName.GetHashCode();
      hash ^= SecretEnv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (KmsKeyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(KmsKeyName);
      }
      secretEnv_.WriteTo(output, _map_secretEnv_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (KmsKeyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KmsKeyName);
      }
      size += secretEnv_.CalculateSize(_map_secretEnv_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Secret other) {
      if (other == null) {
        return;
      }
      if (other.KmsKeyName.Length != 0) {
        KmsKeyName = other.KmsKeyName;
      }
      secretEnv_.Add(other.secretEnv_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            KmsKeyName = input.ReadString();
            break;
          }
          case 26: {
            secretEnv_.AddEntriesFrom(input, _map_secretEnv_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Optional arguments to enable specific features of builds.
  /// </summary>
  public sealed partial class BuildOptions : pb::IMessage<BuildOptions> {
    private static readonly pb::MessageParser<BuildOptions> _parser = new pb::MessageParser<BuildOptions>(() => new BuildOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.CloudBuild.V1.DataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildOptions(BuildOptions other) : this() {
      sourceProvenanceHash_ = other.sourceProvenanceHash_.Clone();
      requestedVerifyOption_ = other.requestedVerifyOption_;
      machineType_ = other.machineType_;
      diskSizeGb_ = other.diskSizeGb_;
      substitutionOption_ = other.substitutionOption_;
      logStreamingOption_ = other.logStreamingOption_;
      workerPool_ = other.workerPool_;
      logging_ = other.logging_;
      env_ = other.env_.Clone();
      secretEnv_ = other.secretEnv_.Clone();
      volumes_ = other.volumes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildOptions Clone() {
      return new BuildOptions(this);
    }

    /// <summary>Field number for the "source_provenance_hash" field.</summary>
    public const int SourceProvenanceHashFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType> _repeated_sourceProvenanceHash_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType) x);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType> sourceProvenanceHash_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType>();
    /// <summary>
    /// Requested hash for SourceProvenance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Hash.Types.HashType> SourceProvenanceHash {
      get { return sourceProvenanceHash_; }
    }

    /// <summary>Field number for the "requested_verify_option" field.</summary>
    public const int RequestedVerifyOptionFieldNumber = 2;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.VerifyOption requestedVerifyOption_ = global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.VerifyOption.NotVerified;
    /// <summary>
    /// Requested verifiability options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.VerifyOption RequestedVerifyOption {
      get { return requestedVerifyOption_; }
      set {
        requestedVerifyOption_ = value;
      }
    }

    /// <summary>Field number for the "machine_type" field.</summary>
    public const int MachineTypeFieldNumber = 3;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.MachineType machineType_ = global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.MachineType.Unspecified;
    /// <summary>
    /// Compute Engine machine type on which to run the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.MachineType MachineType {
      get { return machineType_; }
      set {
        machineType_ = value;
      }
    }

    /// <summary>Field number for the "disk_size_gb" field.</summary>
    public const int DiskSizeGbFieldNumber = 6;
    private long diskSizeGb_;
    /// <summary>
    /// Requested disk size for the VM that runs the build. Note that this is *NOT*
    /// "disk free"; some of the space will be used by the operating system and
    /// build utilities. Also note that this is the minimum disk size that will be
    /// allocated for the build -- the build may run with a larger disk than
    /// requested. At present, the maximum disk size is 1000GB; builds that request
    /// more than the maximum are rejected with an error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DiskSizeGb {
      get { return diskSizeGb_; }
      set {
        diskSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "substitution_option" field.</summary>
    public const int SubstitutionOptionFieldNumber = 4;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.SubstitutionOption substitutionOption_ = global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.SubstitutionOption.MustMatch;
    /// <summary>
    /// Option to specify behavior when there is an error in the substitution
    /// checks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.SubstitutionOption SubstitutionOption {
      get { return substitutionOption_; }
      set {
        substitutionOption_ = value;
      }
    }

    /// <summary>Field number for the "log_streaming_option" field.</summary>
    public const int LogStreamingOptionFieldNumber = 5;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LogStreamingOption logStreamingOption_ = global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LogStreamingOption.StreamDefault;
    /// <summary>
    /// Option to define build log streaming behavior to Google Cloud
    /// Storage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LogStreamingOption LogStreamingOption {
      get { return logStreamingOption_; }
      set {
        logStreamingOption_ = value;
      }
    }

    /// <summary>Field number for the "worker_pool" field.</summary>
    public const int WorkerPoolFieldNumber = 7;
    private string workerPool_ = "";
    /// <summary>
    /// Option to specify a `WorkerPool` for the build.
    /// Format: projects/{project}/locations/{location}/workerPools/{workerPool}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkerPool {
      get { return workerPool_; }
      set {
        workerPool_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logging" field.</summary>
    public const int LoggingFieldNumber = 11;
    private global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LoggingMode logging_ = global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LoggingMode.LoggingUnspecified;
    /// <summary>
    /// Option to specify the logging mode, which determines where the logs are
    /// stored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LoggingMode Logging {
      get { return logging_; }
      set {
        logging_ = value;
      }
    }

    /// <summary>Field number for the "env" field.</summary>
    public const int EnvFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _repeated_env_codec
        = pb::FieldCodec.ForString(98);
    private readonly pbc::RepeatedField<string> env_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of global environment variable definitions that will exist for all
    /// build steps in this build. If a variable is defined in both globally and in
    /// a build step, the variable will use the build step value.
    ///
    /// The elements are of the form "KEY=VALUE" for the environment variable "KEY"
    /// being given the value "VALUE".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Env {
      get { return env_; }
    }

    /// <summary>Field number for the "secret_env" field.</summary>
    public const int SecretEnvFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_secretEnv_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> secretEnv_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of global environment variables, which are encrypted using a Cloud
    /// Key Management Service crypto key. These values must be specified in the
    /// build's `Secret`. These variables will be available to all build steps
    /// in this build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SecretEnv {
      get { return secretEnv_; }
    }

    /// <summary>Field number for the "volumes" field.</summary>
    public const int VolumesFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume> _repeated_volumes_codec
        = pb::FieldCodec.ForMessage(114, global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume.Parser);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume> volumes_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume>();
    /// <summary>
    /// Global list of volumes to mount for ALL build steps
    ///
    /// Each volume is created as an empty volume prior to starting the build
    /// process. Upon completion of the build, volumes and their contents are
    /// discarded. Global volume names and paths cannot conflict with the volumes
    /// defined a build step.
    ///
    /// Using a global volume in a build with only one step is not valid as
    /// it is indicative of a build request with an incorrect configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.CloudBuild.V1.Volume> Volumes {
      get { return volumes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sourceProvenanceHash_.Equals(other.sourceProvenanceHash_)) return false;
      if (RequestedVerifyOption != other.RequestedVerifyOption) return false;
      if (MachineType != other.MachineType) return false;
      if (DiskSizeGb != other.DiskSizeGb) return false;
      if (SubstitutionOption != other.SubstitutionOption) return false;
      if (LogStreamingOption != other.LogStreamingOption) return false;
      if (WorkerPool != other.WorkerPool) return false;
      if (Logging != other.Logging) return false;
      if(!env_.Equals(other.env_)) return false;
      if(!secretEnv_.Equals(other.secretEnv_)) return false;
      if(!volumes_.Equals(other.volumes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sourceProvenanceHash_.GetHashCode();
      if (RequestedVerifyOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.VerifyOption.NotVerified) hash ^= RequestedVerifyOption.GetHashCode();
      if (MachineType != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.MachineType.Unspecified) hash ^= MachineType.GetHashCode();
      if (DiskSizeGb != 0L) hash ^= DiskSizeGb.GetHashCode();
      if (SubstitutionOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.SubstitutionOption.MustMatch) hash ^= SubstitutionOption.GetHashCode();
      if (LogStreamingOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LogStreamingOption.StreamDefault) hash ^= LogStreamingOption.GetHashCode();
      if (WorkerPool.Length != 0) hash ^= WorkerPool.GetHashCode();
      if (Logging != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LoggingMode.LoggingUnspecified) hash ^= Logging.GetHashCode();
      hash ^= env_.GetHashCode();
      hash ^= secretEnv_.GetHashCode();
      hash ^= volumes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sourceProvenanceHash_.WriteTo(output, _repeated_sourceProvenanceHash_codec);
      if (RequestedVerifyOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.VerifyOption.NotVerified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RequestedVerifyOption);
      }
      if (MachineType != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.MachineType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MachineType);
      }
      if (SubstitutionOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.SubstitutionOption.MustMatch) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SubstitutionOption);
      }
      if (LogStreamingOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LogStreamingOption.StreamDefault) {
        output.WriteRawTag(40);
        output.WriteEnum((int) LogStreamingOption);
      }
      if (DiskSizeGb != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(DiskSizeGb);
      }
      if (WorkerPool.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(WorkerPool);
      }
      if (Logging != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LoggingMode.LoggingUnspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Logging);
      }
      env_.WriteTo(output, _repeated_env_codec);
      secretEnv_.WriteTo(output, _repeated_secretEnv_codec);
      volumes_.WriteTo(output, _repeated_volumes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sourceProvenanceHash_.CalculateSize(_repeated_sourceProvenanceHash_codec);
      if (RequestedVerifyOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.VerifyOption.NotVerified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestedVerifyOption);
      }
      if (MachineType != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.MachineType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MachineType);
      }
      if (DiskSizeGb != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DiskSizeGb);
      }
      if (SubstitutionOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.SubstitutionOption.MustMatch) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubstitutionOption);
      }
      if (LogStreamingOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LogStreamingOption.StreamDefault) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LogStreamingOption);
      }
      if (WorkerPool.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkerPool);
      }
      if (Logging != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LoggingMode.LoggingUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Logging);
      }
      size += env_.CalculateSize(_repeated_env_codec);
      size += secretEnv_.CalculateSize(_repeated_secretEnv_codec);
      size += volumes_.CalculateSize(_repeated_volumes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildOptions other) {
      if (other == null) {
        return;
      }
      sourceProvenanceHash_.Add(other.sourceProvenanceHash_);
      if (other.RequestedVerifyOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.VerifyOption.NotVerified) {
        RequestedVerifyOption = other.RequestedVerifyOption;
      }
      if (other.MachineType != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.MachineType.Unspecified) {
        MachineType = other.MachineType;
      }
      if (other.DiskSizeGb != 0L) {
        DiskSizeGb = other.DiskSizeGb;
      }
      if (other.SubstitutionOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.SubstitutionOption.MustMatch) {
        SubstitutionOption = other.SubstitutionOption;
      }
      if (other.LogStreamingOption != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LogStreamingOption.StreamDefault) {
        LogStreamingOption = other.LogStreamingOption;
      }
      if (other.WorkerPool.Length != 0) {
        WorkerPool = other.WorkerPool;
      }
      if (other.Logging != global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LoggingMode.LoggingUnspecified) {
        Logging = other.Logging;
      }
      env_.Add(other.env_);
      secretEnv_.Add(other.secretEnv_);
      volumes_.Add(other.volumes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            sourceProvenanceHash_.AddEntriesFrom(input, _repeated_sourceProvenanceHash_codec);
            break;
          }
          case 16: {
            RequestedVerifyOption = (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.VerifyOption) input.ReadEnum();
            break;
          }
          case 24: {
            MachineType = (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.MachineType) input.ReadEnum();
            break;
          }
          case 32: {
            SubstitutionOption = (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.SubstitutionOption) input.ReadEnum();
            break;
          }
          case 40: {
            LogStreamingOption = (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LogStreamingOption) input.ReadEnum();
            break;
          }
          case 48: {
            DiskSizeGb = input.ReadInt64();
            break;
          }
          case 58: {
            WorkerPool = input.ReadString();
            break;
          }
          case 88: {
            Logging = (global::Google.Events.Protobuf.Cloud.CloudBuild.V1.BuildOptions.Types.LoggingMode) input.ReadEnum();
            break;
          }
          case 98: {
            env_.AddEntriesFrom(input, _repeated_env_codec);
            break;
          }
          case 106: {
            secretEnv_.AddEntriesFrom(input, _repeated_secretEnv_codec);
            break;
          }
          case 114: {
            volumes_.AddEntriesFrom(input, _repeated_volumes_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BuildOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Specifies the manner in which the build should be verified, if at all.
      /// </summary>
      public enum VerifyOption {
        /// <summary>
        /// Not a verifiable build. (default)
        /// </summary>
        [pbr::OriginalName("NOT_VERIFIED")] NotVerified = 0,
        /// <summary>
        /// Verified build.
        /// </summary>
        [pbr::OriginalName("VERIFIED")] Verified = 1,
      }

      /// <summary>
      /// Supported VM sizes.
      /// </summary>
      public enum MachineType {
        /// <summary>
        /// Standard machine type.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Highcpu machine with 8 CPUs.
        /// </summary>
        [pbr::OriginalName("N1_HIGHCPU_8")] N1Highcpu8 = 1,
        /// <summary>
        /// Highcpu machine with 32 CPUs.
        /// </summary>
        [pbr::OriginalName("N1_HIGHCPU_32")] N1Highcpu32 = 2,
      }

      /// <summary>
      /// Specifies the behavior when there is an error in the substitution checks.
      /// </summary>
      public enum SubstitutionOption {
        /// <summary>
        /// Fails the build if error in substitutions checks, like missing
        /// a substitution in the template or in the map.
        /// </summary>
        [pbr::OriginalName("MUST_MATCH")] MustMatch = 0,
        /// <summary>
        /// Do not fail the build if error in substitutions checks.
        /// </summary>
        [pbr::OriginalName("ALLOW_LOOSE")] AllowLoose = 1,
      }

      /// <summary>
      /// Specifies the behavior when writing build logs to Google Cloud Storage.
      /// </summary>
      public enum LogStreamingOption {
        /// <summary>
        /// Service may automatically determine build log streaming behavior.
        /// </summary>
        [pbr::OriginalName("STREAM_DEFAULT")] StreamDefault = 0,
        /// <summary>
        /// Build logs should be streamed to Google Cloud Storage.
        /// </summary>
        [pbr::OriginalName("STREAM_ON")] StreamOn = 1,
        /// <summary>
        /// Build logs should not be streamed to Google Cloud Storage; they will be
        /// written when the build is completed.
        /// </summary>
        [pbr::OriginalName("STREAM_OFF")] StreamOff = 2,
      }

      /// <summary>
      /// Specifies the logging mode.
      /// </summary>
      public enum LoggingMode {
        /// <summary>
        /// The service determines the logging mode. The default is `LEGACY`. Do not
        /// rely on the default logging behavior as it may change in the future.
        /// </summary>
        [pbr::OriginalName("LOGGING_UNSPECIFIED")] LoggingUnspecified = 0,
        /// <summary>
        /// Stackdriver logging and Cloud Storage logging are enabled.
        /// </summary>
        [pbr::OriginalName("LEGACY")] Legacy = 1,
        /// <summary>
        /// Only Cloud Storage logging is enabled.
        /// </summary>
        [pbr::OriginalName("GCS_ONLY")] GcsOnly = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
