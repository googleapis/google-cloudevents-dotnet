// Copyright 2024, Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/events/cloud/redis/v1/data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Events.Protobuf.Cloud.Redis.V1 {

  /// <summary>Holder for reflection information generated from google/events/cloud/redis/v1/data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for google/events/cloud/redis/v1/data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidnb29nbGUvZXZlbnRzL2Nsb3VkL3JlZGlzL3YxL2RhdGEucHJvdG8SHGdv",
            "b2dsZS5ldmVudHMuY2xvdWQucmVkaXMudjEaHmdvb2dsZS9wcm90b2J1Zi9k",
            "dXJhdGlvbi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90",
            "bxobZ29vZ2xlL3R5cGUvZGF5b2Z3ZWVrLnByb3RvGhtnb29nbGUvdHlwZS90",
            "aW1lb2ZkYXkucHJvdG8iJAoITm9kZUluZm8SCgoCaWQYASABKAkSDAoEem9u",
            "ZRgCIAEoCSLZEQoISW5zdGFuY2USDAoEbmFtZRgBIAEoCRIUCgxkaXNwbGF5",
            "X25hbWUYAiABKAkSQgoGbGFiZWxzGAMgAygLMjIuZ29vZ2xlLmV2ZW50cy5j",
            "bG91ZC5yZWRpcy52MS5JbnN0YW5jZS5MYWJlbHNFbnRyeRITCgtsb2NhdGlv",
            "bl9pZBgEIAEoCRIfChdhbHRlcm5hdGl2ZV9sb2NhdGlvbl9pZBgFIAEoCRIV",
            "Cg1yZWRpc192ZXJzaW9uGAcgASgJEhkKEXJlc2VydmVkX2lwX3JhbmdlGAkg",
            "ASgJEhoKEnNlY29uZGFyeV9pcF9yYW5nZRgeIAEoCRIMCgRob3N0GAogASgJ",
            "EgwKBHBvcnQYCyABKAUSGwoTY3VycmVudF9sb2NhdGlvbl9pZBgMIAEoCRIv",
            "CgtjcmVhdGVfdGltZRgNIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXASOwoFc3RhdGUYDiABKA4yLC5nb29nbGUuZXZlbnRzLmNsb3VkLnJlZGlz",
            "LnYxLkluc3RhbmNlLlN0YXRlEhYKDnN0YXR1c19tZXNzYWdlGA8gASgJEk8K",
            "DXJlZGlzX2NvbmZpZ3MYECADKAsyOC5nb29nbGUuZXZlbnRzLmNsb3VkLnJl",
            "ZGlzLnYxLkluc3RhbmNlLlJlZGlzQ29uZmlnc0VudHJ5EjkKBHRpZXIYESAB",
            "KA4yKy5nb29nbGUuZXZlbnRzLmNsb3VkLnJlZGlzLnYxLkluc3RhbmNlLlRp",
            "ZXISFgoObWVtb3J5X3NpemVfZ2IYEiABKAUSGgoSYXV0aG9yaXplZF9uZXR3",
            "b3JrGBQgASgJEiAKGHBlcnNpc3RlbmNlX2lhbV9pZGVudGl0eRgVIAEoCRJI",
            "Cgxjb25uZWN0X21vZGUYFiABKA4yMi5nb29nbGUuZXZlbnRzLmNsb3VkLnJl",
            "ZGlzLnYxLkluc3RhbmNlLkNvbm5lY3RNb2RlEhQKDGF1dGhfZW5hYmxlZBgX",
            "IAEoCBJFCg9zZXJ2ZXJfY2FfY2VydHMYGSADKAsyLC5nb29nbGUuZXZlbnRz",
            "LmNsb3VkLnJlZGlzLnYxLlRsc0NlcnRpZmljYXRlEl0KF3RyYW5zaXRfZW5j",
            "cnlwdGlvbl9tb2RlGBogASgOMjwuZ29vZ2xlLmV2ZW50cy5jbG91ZC5yZWRp",
            "cy52MS5JbnN0YW5jZS5UcmFuc2l0RW5jcnlwdGlvbk1vZGUSSwoSbWFpbnRl",
            "bmFuY2VfcG9saWN5GBsgASgLMi8uZ29vZ2xlLmV2ZW50cy5jbG91ZC5yZWRp",
            "cy52MS5NYWludGVuYW5jZVBvbGljeRJPChRtYWludGVuYW5jZV9zY2hlZHVs",
            "ZRgcIAEoCzIxLmdvb2dsZS5ldmVudHMuY2xvdWQucmVkaXMudjEuTWFpbnRl",
            "bmFuY2VTY2hlZHVsZRIVCg1yZXBsaWNhX2NvdW50GB8gASgFEjUKBW5vZGVz",
            "GCAgAygLMiYuZ29vZ2xlLmV2ZW50cy5jbG91ZC5yZWRpcy52MS5Ob2RlSW5m",
            "bxIVCg1yZWFkX2VuZHBvaW50GCEgASgJEhoKEnJlYWRfZW5kcG9pbnRfcG9y",
            "dBgiIAEoBRJTChJyZWFkX3JlcGxpY2FzX21vZGUYIyABKA4yNy5nb29nbGUu",
            "ZXZlbnRzLmNsb3VkLnJlZGlzLnYxLkluc3RhbmNlLlJlYWRSZXBsaWNhc01v",
            "ZGUSHAoUY3VzdG9tZXJfbWFuYWdlZF9rZXkYJCABKAkSSwoScGVyc2lzdGVu",
            "Y2VfY29uZmlnGCUgASgLMi8uZ29vZ2xlLmV2ZW50cy5jbG91ZC5yZWRpcy52",
            "MS5QZXJzaXN0ZW5jZUNvbmZpZxJTChJzdXNwZW5zaW9uX3JlYXNvbnMYJiAD",
            "KA4yNy5nb29nbGUuZXZlbnRzLmNsb3VkLnJlZGlzLnYxLkluc3RhbmNlLlN1",
            "c3BlbnNpb25SZWFzb24SGwoTbWFpbnRlbmFuY2VfdmVyc2lvbhgnIAEoCRIm",
            "Ch5hdmFpbGFibGVfbWFpbnRlbmFuY2VfdmVyc2lvbnMYKCADKAkaLQoLTGFi",
            "ZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARozChFS",
            "ZWRpc0NvbmZpZ3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6",
            "AjgBIpQBCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgwKCENSRUFU",
            "SU5HEAESCQoFUkVBRFkQAhIMCghVUERBVElORxADEgwKCERFTEVUSU5HEAQS",
            "DQoJUkVQQUlSSU5HEAUSDwoLTUFJTlRFTkFOQ0UQBhINCglJTVBPUlRJTkcQ",
            "CBIQCgxGQUlMSU5HX09WRVIQCSI4CgRUaWVyEhQKEFRJRVJfVU5TUEVDSUZJ",
            "RUQQABIJCgVCQVNJQxABEg8KC1NUQU5EQVJEX0hBEAMiWwoLQ29ubmVjdE1v",
            "ZGUSHAoYQ09OTkVDVF9NT0RFX1VOU1BFQ0lGSUVEEAASEgoORElSRUNUX1BF",
            "RVJJTkcQARIaChZQUklWQVRFX1NFUlZJQ0VfQUNDRVNTEAIiaQoVVHJhbnNp",
            "dEVuY3J5cHRpb25Nb2RlEicKI1RSQU5TSVRfRU5DUllQVElPTl9NT0RFX1VO",
            "U1BFQ0lGSUVEEAASGQoVU0VSVkVSX0FVVEhFTlRJQ0FUSU9OEAESDAoIRElT",
            "QUJMRUQQAiJtChBSZWFkUmVwbGljYXNNb2RlEiIKHlJFQURfUkVQTElDQVNf",
            "TU9ERV9VTlNQRUNJRklFRBAAEhoKFlJFQURfUkVQTElDQVNfRElTQUJMRUQQ",
            "ARIZChVSRUFEX1JFUExJQ0FTX0VOQUJMRUQQAiJVChBTdXNwZW5zaW9uUmVh",
            "c29uEiEKHVNVU1BFTlNJT05fUkVBU09OX1VOU1BFQ0lGSUVEEAASHgoaQ1VT",
            "VE9NRVJfTUFOQUdFRF9LRVlfSVNTVUUQASKJBAoRUGVyc2lzdGVuY2VDb25m",
            "aWcSWQoQcGVyc2lzdGVuY2VfbW9kZRgBIAEoDjI/Lmdvb2dsZS5ldmVudHMu",
            "Y2xvdWQucmVkaXMudjEuUGVyc2lzdGVuY2VDb25maWcuUGVyc2lzdGVuY2VN",
            "b2RlElsKE3JkYl9zbmFwc2hvdF9wZXJpb2QYAiABKA4yPi5nb29nbGUuZXZl",
            "bnRzLmNsb3VkLnJlZGlzLnYxLlBlcnNpc3RlbmNlQ29uZmlnLlNuYXBzaG90",
            "UGVyaW9kEjoKFnJkYl9uZXh0X3NuYXBzaG90X3RpbWUYBCABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEjsKF3JkYl9zbmFwc2hvdF9zdGFydF90",
            "aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJKCg9QZXJz",
            "aXN0ZW5jZU1vZGUSIAocUEVSU0lTVEVOQ0VfTU9ERV9VTlNQRUNJRklFRBAA",
            "EgwKCERJU0FCTEVEEAESBwoDUkRCEAIidwoOU25hcHNob3RQZXJpb2QSHwob",
            "U05BUFNIT1RfUEVSSU9EX1VOU1BFQ0lGSUVEEAASDAoIT05FX0hPVVIQAxIN",
            "CglTSVhfSE9VUlMQBBIQCgxUV0VMVkVfSE9VUlMQBRIVChFUV0VOVFlfRk9V",
            "Ul9IT1VSUxAGIuQBChFNYWludGVuYW5jZVBvbGljeRIvCgtjcmVhdGVfdGlt",
            "ZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLdXBkYXRl",
            "X3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhMKC2Rl",
            "c2NyaXB0aW9uGAMgASgJElgKGXdlZWtseV9tYWludGVuYW5jZV93aW5kb3cY",
            "BCADKAsyNS5nb29nbGUuZXZlbnRzLmNsb3VkLnJlZGlzLnYxLldlZWtseU1h",
            "aW50ZW5hbmNlV2luZG93IpcBChdXZWVrbHlNYWludGVuYW5jZVdpbmRvdxIj",
            "CgNkYXkYASABKA4yFi5nb29nbGUudHlwZS5EYXlPZldlZWsSKgoKc3RhcnRf",
            "dGltZRgCIAEoCzIWLmdvb2dsZS50eXBlLlRpbWVPZkRheRIrCghkdXJhdGlv",
            "bhgDIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbiLHAQoTTWFpbnRl",
            "bmFuY2VTY2hlZHVsZRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXASFgoOY2FuX3Jlc2NoZWR1bGUYAyABKAgSOgoW",
            "c2NoZWR1bGVfZGVhZGxpbmVfdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXAiowEKDlRsc0NlcnRpZmljYXRlEhUKDXNlcmlhbF9udW1i",
            "ZXIYASABKAkSLwoLY3JlYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEi8KC2V4cGlyZV90aW1lGAQgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcBIYChBzaGExX2ZpbmdlcnByaW50GAUgASgJIl0K",
            "EUluc3RhbmNlRXZlbnREYXRhEjwKB3BheWxvYWQYASABKAsyJi5nb29nbGUu",
            "ZXZlbnRzLmNsb3VkLnJlZGlzLnYxLkluc3RhbmNlSACIAQFCCgoIX3BheWxv",
            "YWRCaqoCJUdvb2dsZS5FdmVudHMuUHJvdG9idWYuQ2xvdWQuUmVkaXMuVjHK",
            "AhxHb29nbGVcRXZlbnRzXENsb3VkXFJlZGlzXFYx6gIgR29vZ2xlOjpFdmVu",
            "dHM6OkNsb3VkOjpSZWRpczo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.DayofweekReflection.Descriptor, global::Google.Type.TimeofdayReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.NodeInfo), global::Google.Events.Protobuf.Cloud.Redis.V1.NodeInfo.Parser, new[]{ "Id", "Zone" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.Instance), global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Parser, new[]{ "Name", "DisplayName", "Labels", "LocationId", "AlternativeLocationId", "RedisVersion", "ReservedIpRange", "SecondaryIpRange", "Host", "Port", "CurrentLocationId", "CreateTime", "State", "StatusMessage", "RedisConfigs", "Tier", "MemorySizeGb", "AuthorizedNetwork", "PersistenceIamIdentity", "ConnectMode", "AuthEnabled", "ServerCaCerts", "TransitEncryptionMode", "MaintenancePolicy", "MaintenanceSchedule", "ReplicaCount", "Nodes", "ReadEndpoint", "ReadEndpointPort", "ReadReplicasMode", "CustomerManagedKey", "PersistenceConfig", "SuspensionReasons", "MaintenanceVersion", "AvailableMaintenanceVersions" }, null, new[]{ typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State), typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier), typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode), typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode), typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode), typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.SuspensionReason) }, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig), global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Parser, new[]{ "PersistenceMode", "RdbSnapshotPeriod", "RdbNextSnapshotTime", "RdbSnapshotStartTime" }, null, new[]{ typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode), typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenancePolicy), global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenancePolicy.Parser, new[]{ "CreateTime", "UpdateTime", "Description", "WeeklyMaintenanceWindow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.WeeklyMaintenanceWindow), global::Google.Events.Protobuf.Cloud.Redis.V1.WeeklyMaintenanceWindow.Parser, new[]{ "Day", "StartTime", "Duration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenanceSchedule), global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenanceSchedule.Parser, new[]{ "StartTime", "EndTime", "CanReschedule", "ScheduleDeadlineTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.TlsCertificate), global::Google.Events.Protobuf.Cloud.Redis.V1.TlsCertificate.Parser, new[]{ "SerialNumber", "CreateTime", "ExpireTime", "Sha1Fingerprint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Events.Protobuf.Cloud.Redis.V1.InstanceEventData), global::Google.Events.Protobuf.Cloud.Redis.V1.InstanceEventData.Parser, new[]{ "Payload" }, new[]{ "Payload" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Node specific properties.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NodeInfo : pb::IMessage<NodeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeInfo> _parser = new pb::MessageParser<NodeInfo>(() => new NodeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.Redis.V1.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeInfo(NodeInfo other) : this() {
      id_ = other.id_;
      zone_ = other.zone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeInfo Clone() {
      return new NodeInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Output only. Node identifying string. e.g. 'node-0', 'node-1'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Output only. Location of the node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Zone != other.Zone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Memorystore for Redis instance.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Instance : pb::IMessage<Instance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Instance> _parser = new pb::MessageParser<Instance>(() => new Instance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Instance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.Redis.V1.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance(Instance other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      labels_ = other.labels_.Clone();
      locationId_ = other.locationId_;
      alternativeLocationId_ = other.alternativeLocationId_;
      redisVersion_ = other.redisVersion_;
      reservedIpRange_ = other.reservedIpRange_;
      secondaryIpRange_ = other.secondaryIpRange_;
      host_ = other.host_;
      port_ = other.port_;
      currentLocationId_ = other.currentLocationId_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      state_ = other.state_;
      statusMessage_ = other.statusMessage_;
      redisConfigs_ = other.redisConfigs_.Clone();
      tier_ = other.tier_;
      memorySizeGb_ = other.memorySizeGb_;
      authorizedNetwork_ = other.authorizedNetwork_;
      persistenceIamIdentity_ = other.persistenceIamIdentity_;
      connectMode_ = other.connectMode_;
      authEnabled_ = other.authEnabled_;
      serverCaCerts_ = other.serverCaCerts_.Clone();
      transitEncryptionMode_ = other.transitEncryptionMode_;
      maintenancePolicy_ = other.maintenancePolicy_ != null ? other.maintenancePolicy_.Clone() : null;
      maintenanceSchedule_ = other.maintenanceSchedule_ != null ? other.maintenanceSchedule_.Clone() : null;
      replicaCount_ = other.replicaCount_;
      nodes_ = other.nodes_.Clone();
      readEndpoint_ = other.readEndpoint_;
      readEndpointPort_ = other.readEndpointPort_;
      readReplicasMode_ = other.readReplicasMode_;
      customerManagedKey_ = other.customerManagedKey_;
      persistenceConfig_ = other.persistenceConfig_ != null ? other.persistenceConfig_.Clone() : null;
      suspensionReasons_ = other.suspensionReasons_.Clone();
      maintenanceVersion_ = other.maintenanceVersion_;
      availableMaintenanceVersions_ = other.availableMaintenanceVersions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance Clone() {
      return new Instance(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Unique name of the resource in this scope including project and
    /// location using the form:
    ///     `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
    ///
    /// Note: Redis instances are managed and addressed at regional level so
    /// location_id here refers to a GCP region; however, users may choose which
    /// specific zone (or collection of zones for cross-zone instances) an instance
    /// should be provisioned in. Refer to
    /// [location_id][google.cloud.redis.v1.Instance.location_id] and
    /// [alternative_location_id][google.cloud.redis.v1.Instance.alternative_location_id]
    /// fields for more details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// An arbitrary and optional user-provided name for the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Resource labels to represent user provided metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 4;
    private string locationId_ = "";
    /// <summary>
    /// Optional. The zone where the instance will be provisioned. If not provided,
    /// the service will choose a zone from the specified region for the instance.
    /// For standard tier, additional nodes will be added across multiple zones for
    /// protection against zonal failures. If specified, at least one node will be
    /// provisioned in this zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alternative_location_id" field.</summary>
    public const int AlternativeLocationIdFieldNumber = 5;
    private string alternativeLocationId_ = "";
    /// <summary>
    /// Optional. If specified, at least one node will be provisioned in this zone
    /// in addition to the zone specified in location_id. Only applicable to
    /// standard tier. If provided, it must be a different zone from the one
    /// provided in [location_id]. Additional nodes beyond the first 2 will be
    /// placed in zones selected by the service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AlternativeLocationId {
      get { return alternativeLocationId_; }
      set {
        alternativeLocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "redis_version" field.</summary>
    public const int RedisVersionFieldNumber = 7;
    private string redisVersion_ = "";
    /// <summary>
    /// Optional. The version of Redis software.
    /// If not provided, latest supported version will be used. Currently, the
    /// supported values are:
    ///
    ///  *   `REDIS_3_2` for Redis 3.2 compatibility
    ///  *   `REDIS_4_0` for Redis 4.0 compatibility (default)
    ///  *   `REDIS_5_0` for Redis 5.0 compatibility
    ///  *   `REDIS_6_X` for Redis 6.x compatibility
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedisVersion {
      get { return redisVersion_; }
      set {
        redisVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reserved_ip_range" field.</summary>
    public const int ReservedIpRangeFieldNumber = 9;
    private string reservedIpRange_ = "";
    /// <summary>
    /// Optional. For DIRECT_PEERING mode, the CIDR range of internal addresses
    /// that are reserved for this instance. Range must
    /// be unique and non-overlapping with existing subnets in an authorized
    /// network. For PRIVATE_SERVICE_ACCESS mode, the name of one allocated IP
    /// address ranges associated with this private service access connection.
    /// If not provided, the service will choose an unused /29 block, for
    /// example, 10.0.0.0/29 or 192.168.0.0/29.  For READ_REPLICAS_ENABLED
    /// the default block size is /28.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReservedIpRange {
      get { return reservedIpRange_; }
      set {
        reservedIpRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secondary_ip_range" field.</summary>
    public const int SecondaryIpRangeFieldNumber = 30;
    private string secondaryIpRange_ = "";
    /// <summary>
    /// Optional. Additional IP range for node placement. Required when enabling
    /// read replicas on an existing instance. For DIRECT_PEERING mode value must
    /// be a CIDR range of size /28, or "auto". For PRIVATE_SERVICE_ACCESS mode
    /// value must be the name of an allocated address range associated with the
    /// private service access connection, or "auto".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecondaryIpRange {
      get { return secondaryIpRange_; }
      set {
        secondaryIpRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 10;
    private string host_ = "";
    /// <summary>
    /// Output only. Hostname or IP address of the exposed Redis endpoint used by
    /// clients to connect to the service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 11;
    private int port_;
    /// <summary>
    /// Output only. The port number of the exposed Redis endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "current_location_id" field.</summary>
    public const int CurrentLocationIdFieldNumber = 12;
    private string currentLocationId_ = "";
    /// <summary>
    /// Output only. The current zone where the Redis primary node is located. In
    /// basic tier, this will always be the same as [location_id]. In
    /// standard tier, this can be the zone of any node in the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurrentLocationId {
      get { return currentLocationId_; }
      set {
        currentLocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time the instance was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 14;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State state_ = global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of this instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 15;
    private string statusMessage_ = "";
    /// <summary>
    /// Output only. Additional information about the current status of this
    /// instance, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "redis_configs" field.</summary>
    public const int RedisConfigsFieldNumber = 16;
    private static readonly pbc::MapField<string, string>.Codec _map_redisConfigs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 130);
    private readonly pbc::MapField<string, string> redisConfigs_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Redis configuration parameters, according to
    /// http://redis.io/topics/config. Currently, the only supported parameters
    /// are:
    ///
    ///  Redis version 3.2 and newer:
    ///
    ///  *   maxmemory-policy
    ///  *   notify-keyspace-events
    ///
    ///  Redis version 4.0 and newer:
    ///
    ///  *   activedefrag
    ///  *   lfu-decay-time
    ///  *   lfu-log-factor
    ///  *   maxmemory-gb
    ///
    ///  Redis version 5.0 and newer:
    ///
    ///  *   stream-node-max-bytes
    ///  *   stream-node-max-entries
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> RedisConfigs {
      get { return redisConfigs_; }
    }

    /// <summary>Field number for the "tier" field.</summary>
    public const int TierFieldNumber = 17;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier tier_ = global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier.Unspecified;
    /// <summary>
    /// Required. The service tier of the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier Tier {
      get { return tier_; }
      set {
        tier_ = value;
      }
    }

    /// <summary>Field number for the "memory_size_gb" field.</summary>
    public const int MemorySizeGbFieldNumber = 18;
    private int memorySizeGb_;
    /// <summary>
    /// Required. Redis memory size in GiB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MemorySizeGb {
      get { return memorySizeGb_; }
      set {
        memorySizeGb_ = value;
      }
    }

    /// <summary>Field number for the "authorized_network" field.</summary>
    public const int AuthorizedNetworkFieldNumber = 20;
    private string authorizedNetwork_ = "";
    /// <summary>
    /// Optional. The full name of the Google Compute Engine
    /// [network](https://cloud.google.com/vpc/docs/vpc) to which the
    /// instance is connected. If left unspecified, the `default` network
    /// will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuthorizedNetwork {
      get { return authorizedNetwork_; }
      set {
        authorizedNetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "persistence_iam_identity" field.</summary>
    public const int PersistenceIamIdentityFieldNumber = 21;
    private string persistenceIamIdentity_ = "";
    /// <summary>
    /// Output only. Cloud IAM identity used by import / export operations to
    /// transfer data to/from Cloud Storage. Format is
    /// "serviceAccount:&lt;service_account_email>". The value may change over time
    /// for a given instance so should be checked before each import/export
    /// operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PersistenceIamIdentity {
      get { return persistenceIamIdentity_; }
      set {
        persistenceIamIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connect_mode" field.</summary>
    public const int ConnectModeFieldNumber = 22;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode connectMode_ = global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode.Unspecified;
    /// <summary>
    /// Optional. The network connect mode of the Redis instance.
    /// If not provided, the connect mode defaults to DIRECT_PEERING.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode ConnectMode {
      get { return connectMode_; }
      set {
        connectMode_ = value;
      }
    }

    /// <summary>Field number for the "auth_enabled" field.</summary>
    public const int AuthEnabledFieldNumber = 23;
    private bool authEnabled_;
    /// <summary>
    /// Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If
    /// set to "true" AUTH is enabled on the instance. Default value is "false"
    /// meaning AUTH is disabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AuthEnabled {
      get { return authEnabled_; }
      set {
        authEnabled_ = value;
      }
    }

    /// <summary>Field number for the "server_ca_certs" field.</summary>
    public const int ServerCaCertsFieldNumber = 25;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.Redis.V1.TlsCertificate> _repeated_serverCaCerts_codec
        = pb::FieldCodec.ForMessage(202, global::Google.Events.Protobuf.Cloud.Redis.V1.TlsCertificate.Parser);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.TlsCertificate> serverCaCerts_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.TlsCertificate>();
    /// <summary>
    /// Output only. List of server CA certificates for the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.TlsCertificate> ServerCaCerts {
      get { return serverCaCerts_; }
    }

    /// <summary>Field number for the "transit_encryption_mode" field.</summary>
    public const int TransitEncryptionModeFieldNumber = 26;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode transitEncryptionMode_ = global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode.Unspecified;
    /// <summary>
    /// Optional. The TLS mode of the Redis instance.
    /// If not provided, TLS is disabled for the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode TransitEncryptionMode {
      get { return transitEncryptionMode_; }
      set {
        transitEncryptionMode_ = value;
      }
    }

    /// <summary>Field number for the "maintenance_policy" field.</summary>
    public const int MaintenancePolicyFieldNumber = 27;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenancePolicy maintenancePolicy_;
    /// <summary>
    /// Optional. The maintenance policy for the instance. If not provided,
    /// maintenance events can be performed at any time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenancePolicy MaintenancePolicy {
      get { return maintenancePolicy_; }
      set {
        maintenancePolicy_ = value;
      }
    }

    /// <summary>Field number for the "maintenance_schedule" field.</summary>
    public const int MaintenanceScheduleFieldNumber = 28;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenanceSchedule maintenanceSchedule_;
    /// <summary>
    /// Output only. Date and time of upcoming maintenance events which have been
    /// scheduled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenanceSchedule MaintenanceSchedule {
      get { return maintenanceSchedule_; }
      set {
        maintenanceSchedule_ = value;
      }
    }

    /// <summary>Field number for the "replica_count" field.</summary>
    public const int ReplicaCountFieldNumber = 31;
    private int replicaCount_;
    /// <summary>
    /// Optional. The number of replica nodes. The valid range for the Standard
    /// Tier with read replicas enabled is [1-5] and defaults to 2. If read
    /// replicas are not enabled for a Standard Tier instance, the only valid value
    /// is 1 and the default is 1. The valid value for basic tier is 0 and the
    /// default is also 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReplicaCount {
      get { return replicaCount_; }
      set {
        replicaCount_ = value;
      }
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 32;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.Redis.V1.NodeInfo> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(258, global::Google.Events.Protobuf.Cloud.Redis.V1.NodeInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.NodeInfo> nodes_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.NodeInfo>();
    /// <summary>
    /// Output only. Info per node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.NodeInfo> Nodes {
      get { return nodes_; }
    }

    /// <summary>Field number for the "read_endpoint" field.</summary>
    public const int ReadEndpointFieldNumber = 33;
    private string readEndpoint_ = "";
    /// <summary>
    /// Output only. Hostname or IP address of the exposed readonly Redis
    /// endpoint. Standard tier only. Targets all healthy replica nodes in
    /// instance. Replication is asynchronous and replica nodes will exhibit some
    /// lag behind the primary. Write requests must target 'host'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReadEndpoint {
      get { return readEndpoint_; }
      set {
        readEndpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "read_endpoint_port" field.</summary>
    public const int ReadEndpointPortFieldNumber = 34;
    private int readEndpointPort_;
    /// <summary>
    /// Output only. The port number of the exposed readonly redis
    /// endpoint. Standard tier only. Write requests should target 'port'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReadEndpointPort {
      get { return readEndpointPort_; }
      set {
        readEndpointPort_ = value;
      }
    }

    /// <summary>Field number for the "read_replicas_mode" field.</summary>
    public const int ReadReplicasModeFieldNumber = 35;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode readReplicasMode_ = global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode.Unspecified;
    /// <summary>
    /// Optional. Read replicas mode for the instance. Defaults to
    /// READ_REPLICAS_DISABLED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode ReadReplicasMode {
      get { return readReplicasMode_; }
      set {
        readReplicasMode_ = value;
      }
    }

    /// <summary>Field number for the "customer_managed_key" field.</summary>
    public const int CustomerManagedKeyFieldNumber = 36;
    private string customerManagedKey_ = "";
    /// <summary>
    /// Optional. The KMS key reference that the customer provides when trying to
    /// create the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CustomerManagedKey {
      get { return customerManagedKey_; }
      set {
        customerManagedKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "persistence_config" field.</summary>
    public const int PersistenceConfigFieldNumber = 37;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig persistenceConfig_;
    /// <summary>
    /// Optional. Persistence configuration parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig PersistenceConfig {
      get { return persistenceConfig_; }
      set {
        persistenceConfig_ = value;
      }
    }

    /// <summary>Field number for the "suspension_reasons" field.</summary>
    public const int SuspensionReasonsFieldNumber = 38;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.SuspensionReason> _repeated_suspensionReasons_codec
        = pb::FieldCodec.ForEnum(306, x => (int) x, x => (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.SuspensionReason) x);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.SuspensionReason> suspensionReasons_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.SuspensionReason>();
    /// <summary>
    /// Optional. reasons that causes instance in "SUSPENDED" state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.SuspensionReason> SuspensionReasons {
      get { return suspensionReasons_; }
    }

    /// <summary>Field number for the "maintenance_version" field.</summary>
    public const int MaintenanceVersionFieldNumber = 39;
    private string maintenanceVersion_ = "";
    /// <summary>
    /// Optional. The self service update maintenance version.
    /// The version is date based such as "20210712_00_00".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaintenanceVersion {
      get { return maintenanceVersion_; }
      set {
        maintenanceVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "available_maintenance_versions" field.</summary>
    public const int AvailableMaintenanceVersionsFieldNumber = 40;
    private static readonly pb::FieldCodec<string> _repeated_availableMaintenanceVersions_codec
        = pb::FieldCodec.ForString(322);
    private readonly pbc::RepeatedField<string> availableMaintenanceVersions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. The available maintenance versions that an instance could update
    /// to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AvailableMaintenanceVersions {
      get { return availableMaintenanceVersions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Instance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Instance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (LocationId != other.LocationId) return false;
      if (AlternativeLocationId != other.AlternativeLocationId) return false;
      if (RedisVersion != other.RedisVersion) return false;
      if (ReservedIpRange != other.ReservedIpRange) return false;
      if (SecondaryIpRange != other.SecondaryIpRange) return false;
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (CurrentLocationId != other.CurrentLocationId) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (State != other.State) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (!RedisConfigs.Equals(other.RedisConfigs)) return false;
      if (Tier != other.Tier) return false;
      if (MemorySizeGb != other.MemorySizeGb) return false;
      if (AuthorizedNetwork != other.AuthorizedNetwork) return false;
      if (PersistenceIamIdentity != other.PersistenceIamIdentity) return false;
      if (ConnectMode != other.ConnectMode) return false;
      if (AuthEnabled != other.AuthEnabled) return false;
      if(!serverCaCerts_.Equals(other.serverCaCerts_)) return false;
      if (TransitEncryptionMode != other.TransitEncryptionMode) return false;
      if (!object.Equals(MaintenancePolicy, other.MaintenancePolicy)) return false;
      if (!object.Equals(MaintenanceSchedule, other.MaintenanceSchedule)) return false;
      if (ReplicaCount != other.ReplicaCount) return false;
      if(!nodes_.Equals(other.nodes_)) return false;
      if (ReadEndpoint != other.ReadEndpoint) return false;
      if (ReadEndpointPort != other.ReadEndpointPort) return false;
      if (ReadReplicasMode != other.ReadReplicasMode) return false;
      if (CustomerManagedKey != other.CustomerManagedKey) return false;
      if (!object.Equals(PersistenceConfig, other.PersistenceConfig)) return false;
      if(!suspensionReasons_.Equals(other.suspensionReasons_)) return false;
      if (MaintenanceVersion != other.MaintenanceVersion) return false;
      if(!availableMaintenanceVersions_.Equals(other.availableMaintenanceVersions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (AlternativeLocationId.Length != 0) hash ^= AlternativeLocationId.GetHashCode();
      if (RedisVersion.Length != 0) hash ^= RedisVersion.GetHashCode();
      if (ReservedIpRange.Length != 0) hash ^= ReservedIpRange.GetHashCode();
      if (SecondaryIpRange.Length != 0) hash ^= SecondaryIpRange.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (CurrentLocationId.Length != 0) hash ^= CurrentLocationId.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (State != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      hash ^= RedisConfigs.GetHashCode();
      if (Tier != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier.Unspecified) hash ^= Tier.GetHashCode();
      if (MemorySizeGb != 0) hash ^= MemorySizeGb.GetHashCode();
      if (AuthorizedNetwork.Length != 0) hash ^= AuthorizedNetwork.GetHashCode();
      if (PersistenceIamIdentity.Length != 0) hash ^= PersistenceIamIdentity.GetHashCode();
      if (ConnectMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode.Unspecified) hash ^= ConnectMode.GetHashCode();
      if (AuthEnabled != false) hash ^= AuthEnabled.GetHashCode();
      hash ^= serverCaCerts_.GetHashCode();
      if (TransitEncryptionMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode.Unspecified) hash ^= TransitEncryptionMode.GetHashCode();
      if (maintenancePolicy_ != null) hash ^= MaintenancePolicy.GetHashCode();
      if (maintenanceSchedule_ != null) hash ^= MaintenanceSchedule.GetHashCode();
      if (ReplicaCount != 0) hash ^= ReplicaCount.GetHashCode();
      hash ^= nodes_.GetHashCode();
      if (ReadEndpoint.Length != 0) hash ^= ReadEndpoint.GetHashCode();
      if (ReadEndpointPort != 0) hash ^= ReadEndpointPort.GetHashCode();
      if (ReadReplicasMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode.Unspecified) hash ^= ReadReplicasMode.GetHashCode();
      if (CustomerManagedKey.Length != 0) hash ^= CustomerManagedKey.GetHashCode();
      if (persistenceConfig_ != null) hash ^= PersistenceConfig.GetHashCode();
      hash ^= suspensionReasons_.GetHashCode();
      if (MaintenanceVersion.Length != 0) hash ^= MaintenanceVersion.GetHashCode();
      hash ^= availableMaintenanceVersions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (LocationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LocationId);
      }
      if (AlternativeLocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AlternativeLocationId);
      }
      if (RedisVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RedisVersion);
      }
      if (ReservedIpRange.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ReservedIpRange);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Port);
      }
      if (CurrentLocationId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CurrentLocationId);
      }
      if (createTime_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateTime);
      }
      if (State != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) State);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(StatusMessage);
      }
      redisConfigs_.WriteTo(output, _map_redisConfigs_codec);
      if (Tier != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier.Unspecified) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) Tier);
      }
      if (MemorySizeGb != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(MemorySizeGb);
      }
      if (AuthorizedNetwork.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(AuthorizedNetwork);
      }
      if (PersistenceIamIdentity.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(PersistenceIamIdentity);
      }
      if (ConnectMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode.Unspecified) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) ConnectMode);
      }
      if (AuthEnabled != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(AuthEnabled);
      }
      serverCaCerts_.WriteTo(output, _repeated_serverCaCerts_codec);
      if (TransitEncryptionMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode.Unspecified) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) TransitEncryptionMode);
      }
      if (maintenancePolicy_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(MaintenancePolicy);
      }
      if (maintenanceSchedule_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(MaintenanceSchedule);
      }
      if (SecondaryIpRange.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(SecondaryIpRange);
      }
      if (ReplicaCount != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(ReplicaCount);
      }
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (ReadEndpoint.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(ReadEndpoint);
      }
      if (ReadEndpointPort != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(ReadEndpointPort);
      }
      if (ReadReplicasMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode.Unspecified) {
        output.WriteRawTag(152, 2);
        output.WriteEnum((int) ReadReplicasMode);
      }
      if (CustomerManagedKey.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(CustomerManagedKey);
      }
      if (persistenceConfig_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(PersistenceConfig);
      }
      suspensionReasons_.WriteTo(output, _repeated_suspensionReasons_codec);
      if (MaintenanceVersion.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(MaintenanceVersion);
      }
      availableMaintenanceVersions_.WriteTo(output, _repeated_availableMaintenanceVersions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (LocationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LocationId);
      }
      if (AlternativeLocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AlternativeLocationId);
      }
      if (RedisVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RedisVersion);
      }
      if (ReservedIpRange.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ReservedIpRange);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Port);
      }
      if (CurrentLocationId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CurrentLocationId);
      }
      if (createTime_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateTime);
      }
      if (State != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) State);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(StatusMessage);
      }
      redisConfigs_.WriteTo(ref output, _map_redisConfigs_codec);
      if (Tier != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier.Unspecified) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) Tier);
      }
      if (MemorySizeGb != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(MemorySizeGb);
      }
      if (AuthorizedNetwork.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(AuthorizedNetwork);
      }
      if (PersistenceIamIdentity.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(PersistenceIamIdentity);
      }
      if (ConnectMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode.Unspecified) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) ConnectMode);
      }
      if (AuthEnabled != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(AuthEnabled);
      }
      serverCaCerts_.WriteTo(ref output, _repeated_serverCaCerts_codec);
      if (TransitEncryptionMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode.Unspecified) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) TransitEncryptionMode);
      }
      if (maintenancePolicy_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(MaintenancePolicy);
      }
      if (maintenanceSchedule_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(MaintenanceSchedule);
      }
      if (SecondaryIpRange.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(SecondaryIpRange);
      }
      if (ReplicaCount != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(ReplicaCount);
      }
      nodes_.WriteTo(ref output, _repeated_nodes_codec);
      if (ReadEndpoint.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(ReadEndpoint);
      }
      if (ReadEndpointPort != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(ReadEndpointPort);
      }
      if (ReadReplicasMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode.Unspecified) {
        output.WriteRawTag(152, 2);
        output.WriteEnum((int) ReadReplicasMode);
      }
      if (CustomerManagedKey.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(CustomerManagedKey);
      }
      if (persistenceConfig_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(PersistenceConfig);
      }
      suspensionReasons_.WriteTo(ref output, _repeated_suspensionReasons_codec);
      if (MaintenanceVersion.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(MaintenanceVersion);
      }
      availableMaintenanceVersions_.WriteTo(ref output, _repeated_availableMaintenanceVersions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (AlternativeLocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlternativeLocationId);
      }
      if (RedisVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedisVersion);
      }
      if (ReservedIpRange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReservedIpRange);
      }
      if (SecondaryIpRange.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SecondaryIpRange);
      }
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (CurrentLocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentLocationId);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (State != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      size += redisConfigs_.CalculateSize(_map_redisConfigs_codec);
      if (Tier != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Tier);
      }
      if (MemorySizeGb != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MemorySizeGb);
      }
      if (AuthorizedNetwork.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuthorizedNetwork);
      }
      if (PersistenceIamIdentity.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PersistenceIamIdentity);
      }
      if (ConnectMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ConnectMode);
      }
      if (AuthEnabled != false) {
        size += 2 + 1;
      }
      size += serverCaCerts_.CalculateSize(_repeated_serverCaCerts_codec);
      if (TransitEncryptionMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TransitEncryptionMode);
      }
      if (maintenancePolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MaintenancePolicy);
      }
      if (maintenanceSchedule_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MaintenanceSchedule);
      }
      if (ReplicaCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReplicaCount);
      }
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (ReadEndpoint.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReadEndpoint);
      }
      if (ReadEndpointPort != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReadEndpointPort);
      }
      if (ReadReplicasMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ReadReplicasMode);
      }
      if (CustomerManagedKey.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CustomerManagedKey);
      }
      if (persistenceConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PersistenceConfig);
      }
      size += suspensionReasons_.CalculateSize(_repeated_suspensionReasons_codec);
      if (MaintenanceVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MaintenanceVersion);
      }
      size += availableMaintenanceVersions_.CalculateSize(_repeated_availableMaintenanceVersions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Instance other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      labels_.MergeFrom(other.labels_);
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      if (other.AlternativeLocationId.Length != 0) {
        AlternativeLocationId = other.AlternativeLocationId;
      }
      if (other.RedisVersion.Length != 0) {
        RedisVersion = other.RedisVersion;
      }
      if (other.ReservedIpRange.Length != 0) {
        ReservedIpRange = other.ReservedIpRange;
      }
      if (other.SecondaryIpRange.Length != 0) {
        SecondaryIpRange = other.SecondaryIpRange;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.CurrentLocationId.Length != 0) {
        CurrentLocationId = other.CurrentLocationId;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.State != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      redisConfigs_.MergeFrom(other.redisConfigs_);
      if (other.Tier != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier.Unspecified) {
        Tier = other.Tier;
      }
      if (other.MemorySizeGb != 0) {
        MemorySizeGb = other.MemorySizeGb;
      }
      if (other.AuthorizedNetwork.Length != 0) {
        AuthorizedNetwork = other.AuthorizedNetwork;
      }
      if (other.PersistenceIamIdentity.Length != 0) {
        PersistenceIamIdentity = other.PersistenceIamIdentity;
      }
      if (other.ConnectMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode.Unspecified) {
        ConnectMode = other.ConnectMode;
      }
      if (other.AuthEnabled != false) {
        AuthEnabled = other.AuthEnabled;
      }
      serverCaCerts_.Add(other.serverCaCerts_);
      if (other.TransitEncryptionMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode.Unspecified) {
        TransitEncryptionMode = other.TransitEncryptionMode;
      }
      if (other.maintenancePolicy_ != null) {
        if (maintenancePolicy_ == null) {
          MaintenancePolicy = new global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenancePolicy();
        }
        MaintenancePolicy.MergeFrom(other.MaintenancePolicy);
      }
      if (other.maintenanceSchedule_ != null) {
        if (maintenanceSchedule_ == null) {
          MaintenanceSchedule = new global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenanceSchedule();
        }
        MaintenanceSchedule.MergeFrom(other.MaintenanceSchedule);
      }
      if (other.ReplicaCount != 0) {
        ReplicaCount = other.ReplicaCount;
      }
      nodes_.Add(other.nodes_);
      if (other.ReadEndpoint.Length != 0) {
        ReadEndpoint = other.ReadEndpoint;
      }
      if (other.ReadEndpointPort != 0) {
        ReadEndpointPort = other.ReadEndpointPort;
      }
      if (other.ReadReplicasMode != global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode.Unspecified) {
        ReadReplicasMode = other.ReadReplicasMode;
      }
      if (other.CustomerManagedKey.Length != 0) {
        CustomerManagedKey = other.CustomerManagedKey;
      }
      if (other.persistenceConfig_ != null) {
        if (persistenceConfig_ == null) {
          PersistenceConfig = new global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig();
        }
        PersistenceConfig.MergeFrom(other.PersistenceConfig);
      }
      suspensionReasons_.Add(other.suspensionReasons_);
      if (other.MaintenanceVersion.Length != 0) {
        MaintenanceVersion = other.MaintenanceVersion;
      }
      availableMaintenanceVersions_.Add(other.availableMaintenanceVersions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 34: {
            LocationId = input.ReadString();
            break;
          }
          case 42: {
            AlternativeLocationId = input.ReadString();
            break;
          }
          case 58: {
            RedisVersion = input.ReadString();
            break;
          }
          case 74: {
            ReservedIpRange = input.ReadString();
            break;
          }
          case 82: {
            Host = input.ReadString();
            break;
          }
          case 88: {
            Port = input.ReadInt32();
            break;
          }
          case 98: {
            CurrentLocationId = input.ReadString();
            break;
          }
          case 106: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 112: {
            State = (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State) input.ReadEnum();
            break;
          }
          case 122: {
            StatusMessage = input.ReadString();
            break;
          }
          case 130: {
            redisConfigs_.AddEntriesFrom(input, _map_redisConfigs_codec);
            break;
          }
          case 136: {
            Tier = (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier) input.ReadEnum();
            break;
          }
          case 144: {
            MemorySizeGb = input.ReadInt32();
            break;
          }
          case 162: {
            AuthorizedNetwork = input.ReadString();
            break;
          }
          case 170: {
            PersistenceIamIdentity = input.ReadString();
            break;
          }
          case 176: {
            ConnectMode = (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode) input.ReadEnum();
            break;
          }
          case 184: {
            AuthEnabled = input.ReadBool();
            break;
          }
          case 202: {
            serverCaCerts_.AddEntriesFrom(input, _repeated_serverCaCerts_codec);
            break;
          }
          case 208: {
            TransitEncryptionMode = (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode) input.ReadEnum();
            break;
          }
          case 218: {
            if (maintenancePolicy_ == null) {
              MaintenancePolicy = new global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenancePolicy();
            }
            input.ReadMessage(MaintenancePolicy);
            break;
          }
          case 226: {
            if (maintenanceSchedule_ == null) {
              MaintenanceSchedule = new global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenanceSchedule();
            }
            input.ReadMessage(MaintenanceSchedule);
            break;
          }
          case 242: {
            SecondaryIpRange = input.ReadString();
            break;
          }
          case 248: {
            ReplicaCount = input.ReadInt32();
            break;
          }
          case 258: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
          case 266: {
            ReadEndpoint = input.ReadString();
            break;
          }
          case 272: {
            ReadEndpointPort = input.ReadInt32();
            break;
          }
          case 280: {
            ReadReplicasMode = (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode) input.ReadEnum();
            break;
          }
          case 290: {
            CustomerManagedKey = input.ReadString();
            break;
          }
          case 298: {
            if (persistenceConfig_ == null) {
              PersistenceConfig = new global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig();
            }
            input.ReadMessage(PersistenceConfig);
            break;
          }
          case 306:
          case 304: {
            suspensionReasons_.AddEntriesFrom(input, _repeated_suspensionReasons_codec);
            break;
          }
          case 314: {
            MaintenanceVersion = input.ReadString();
            break;
          }
          case 322: {
            availableMaintenanceVersions_.AddEntriesFrom(input, _repeated_availableMaintenanceVersions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 34: {
            LocationId = input.ReadString();
            break;
          }
          case 42: {
            AlternativeLocationId = input.ReadString();
            break;
          }
          case 58: {
            RedisVersion = input.ReadString();
            break;
          }
          case 74: {
            ReservedIpRange = input.ReadString();
            break;
          }
          case 82: {
            Host = input.ReadString();
            break;
          }
          case 88: {
            Port = input.ReadInt32();
            break;
          }
          case 98: {
            CurrentLocationId = input.ReadString();
            break;
          }
          case 106: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 112: {
            State = (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.State) input.ReadEnum();
            break;
          }
          case 122: {
            StatusMessage = input.ReadString();
            break;
          }
          case 130: {
            redisConfigs_.AddEntriesFrom(ref input, _map_redisConfigs_codec);
            break;
          }
          case 136: {
            Tier = (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.Tier) input.ReadEnum();
            break;
          }
          case 144: {
            MemorySizeGb = input.ReadInt32();
            break;
          }
          case 162: {
            AuthorizedNetwork = input.ReadString();
            break;
          }
          case 170: {
            PersistenceIamIdentity = input.ReadString();
            break;
          }
          case 176: {
            ConnectMode = (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ConnectMode) input.ReadEnum();
            break;
          }
          case 184: {
            AuthEnabled = input.ReadBool();
            break;
          }
          case 202: {
            serverCaCerts_.AddEntriesFrom(ref input, _repeated_serverCaCerts_codec);
            break;
          }
          case 208: {
            TransitEncryptionMode = (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.TransitEncryptionMode) input.ReadEnum();
            break;
          }
          case 218: {
            if (maintenancePolicy_ == null) {
              MaintenancePolicy = new global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenancePolicy();
            }
            input.ReadMessage(MaintenancePolicy);
            break;
          }
          case 226: {
            if (maintenanceSchedule_ == null) {
              MaintenanceSchedule = new global::Google.Events.Protobuf.Cloud.Redis.V1.MaintenanceSchedule();
            }
            input.ReadMessage(MaintenanceSchedule);
            break;
          }
          case 242: {
            SecondaryIpRange = input.ReadString();
            break;
          }
          case 248: {
            ReplicaCount = input.ReadInt32();
            break;
          }
          case 258: {
            nodes_.AddEntriesFrom(ref input, _repeated_nodes_codec);
            break;
          }
          case 266: {
            ReadEndpoint = input.ReadString();
            break;
          }
          case 272: {
            ReadEndpointPort = input.ReadInt32();
            break;
          }
          case 280: {
            ReadReplicasMode = (global::Google.Events.Protobuf.Cloud.Redis.V1.Instance.Types.ReadReplicasMode) input.ReadEnum();
            break;
          }
          case 290: {
            CustomerManagedKey = input.ReadString();
            break;
          }
          case 298: {
            if (persistenceConfig_ == null) {
              PersistenceConfig = new global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig();
            }
            input.ReadMessage(PersistenceConfig);
            break;
          }
          case 306:
          case 304: {
            suspensionReasons_.AddEntriesFrom(ref input, _repeated_suspensionReasons_codec);
            break;
          }
          case 314: {
            MaintenanceVersion = input.ReadString();
            break;
          }
          case 322: {
            availableMaintenanceVersions_.AddEntriesFrom(ref input, _repeated_availableMaintenanceVersions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Instance message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Represents the different states of a Redis instance.
      /// </summary>
      public enum State {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Redis instance is being created.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// Redis instance has been created and is fully usable.
        /// </summary>
        [pbr::OriginalName("READY")] Ready = 2,
        /// <summary>
        /// Redis instance configuration is being updated. Certain kinds of updates
        /// may cause the instance to become unusable while the update is in
        /// progress.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 3,
        /// <summary>
        /// Redis instance is being deleted.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 4,
        /// <summary>
        /// Redis instance is being repaired and may be unusable.
        /// </summary>
        [pbr::OriginalName("REPAIRING")] Repairing = 5,
        /// <summary>
        /// Maintenance is being performed on this Redis instance.
        /// </summary>
        [pbr::OriginalName("MAINTENANCE")] Maintenance = 6,
        /// <summary>
        /// Redis instance is importing data (availability may be affected).
        /// </summary>
        [pbr::OriginalName("IMPORTING")] Importing = 8,
        /// <summary>
        /// Redis instance is failing over (availability may be affected).
        /// </summary>
        [pbr::OriginalName("FAILING_OVER")] FailingOver = 9,
      }

      /// <summary>
      /// Available service tiers to choose from
      /// </summary>
      public enum Tier {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("TIER_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// BASIC tier: standalone instance
        /// </summary>
        [pbr::OriginalName("BASIC")] Basic = 1,
        /// <summary>
        /// STANDARD_HA tier: highly available primary/replica instances
        /// </summary>
        [pbr::OriginalName("STANDARD_HA")] StandardHa = 3,
      }

      /// <summary>
      /// Available connection modes.
      /// </summary>
      public enum ConnectMode {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("CONNECT_MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Connect via direct peering to the Memorystore for Redis hosted service.
        /// </summary>
        [pbr::OriginalName("DIRECT_PEERING")] DirectPeering = 1,
        /// <summary>
        /// Connect your Memorystore for Redis instance using Private Service
        /// Access. Private services access provides an IP address range for multiple
        /// Google Cloud services, including Memorystore.
        /// </summary>
        [pbr::OriginalName("PRIVATE_SERVICE_ACCESS")] PrivateServiceAccess = 2,
      }

      /// <summary>
      /// Available TLS modes.
      /// </summary>
      public enum TransitEncryptionMode {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("TRANSIT_ENCRYPTION_MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Client to Server traffic encryption enabled with server authentication.
        /// </summary>
        [pbr::OriginalName("SERVER_AUTHENTICATION")] ServerAuthentication = 1,
        /// <summary>
        /// TLS is disabled for the instance.
        /// </summary>
        [pbr::OriginalName("DISABLED")] Disabled = 2,
      }

      /// <summary>
      /// Read replicas mode.
      /// </summary>
      public enum ReadReplicasMode {
        /// <summary>
        /// If not set, Memorystore Redis backend will default to
        /// READ_REPLICAS_DISABLED.
        /// </summary>
        [pbr::OriginalName("READ_REPLICAS_MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// If disabled, read endpoint will not be provided and the instance cannot
        /// scale up or down the number of replicas.
        /// </summary>
        [pbr::OriginalName("READ_REPLICAS_DISABLED")] ReadReplicasDisabled = 1,
        /// <summary>
        /// If enabled, read endpoint will be provided and the instance can scale
        /// up and down the number of replicas. Not valid for basic tier.
        /// </summary>
        [pbr::OriginalName("READ_REPLICAS_ENABLED")] ReadReplicasEnabled = 2,
      }

      /// <summary>
      /// Possible reasons for the instance to be in a "SUSPENDED" state.
      /// </summary>
      public enum SuspensionReason {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("SUSPENSION_REASON_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Something wrong with the CMEK key provided by customer.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_MANAGED_KEY_ISSUE")] CustomerManagedKeyIssue = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Configuration of the persistence functionality.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PersistenceConfig : pb::IMessage<PersistenceConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PersistenceConfig> _parser = new pb::MessageParser<PersistenceConfig>(() => new PersistenceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PersistenceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.Redis.V1.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PersistenceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PersistenceConfig(PersistenceConfig other) : this() {
      persistenceMode_ = other.persistenceMode_;
      rdbSnapshotPeriod_ = other.rdbSnapshotPeriod_;
      rdbNextSnapshotTime_ = other.rdbNextSnapshotTime_ != null ? other.rdbNextSnapshotTime_.Clone() : null;
      rdbSnapshotStartTime_ = other.rdbSnapshotStartTime_ != null ? other.rdbSnapshotStartTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PersistenceConfig Clone() {
      return new PersistenceConfig(this);
    }

    /// <summary>Field number for the "persistence_mode" field.</summary>
    public const int PersistenceModeFieldNumber = 1;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode persistenceMode_ = global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode.Unspecified;
    /// <summary>
    /// Optional. Controls whether Persistence features are enabled.
    /// If not provided, the existing value will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode PersistenceMode {
      get { return persistenceMode_; }
      set {
        persistenceMode_ = value;
      }
    }

    /// <summary>Field number for the "rdb_snapshot_period" field.</summary>
    public const int RdbSnapshotPeriodFieldNumber = 2;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod rdbSnapshotPeriod_ = global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod.Unspecified;
    /// <summary>
    /// Optional. Period between RDB snapshots. Snapshots will be attempted every
    /// period starting from the provided snapshot start time. For example, a start
    /// time of 01/01/2033 06:45 and SIX_HOURS snapshot period will do nothing
    /// until 01/01/2033, and then trigger snapshots every day at 06:45, 12:45,
    /// 18:45, and 00:45 the next day, and so on. If not provided,
    /// TWENTY_FOUR_HOURS will be used as default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod RdbSnapshotPeriod {
      get { return rdbSnapshotPeriod_; }
      set {
        rdbSnapshotPeriod_ = value;
      }
    }

    /// <summary>Field number for the "rdb_next_snapshot_time" field.</summary>
    public const int RdbNextSnapshotTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp rdbNextSnapshotTime_;
    /// <summary>
    /// Output only. The next time that a snapshot attempt is scheduled to occur.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RdbNextSnapshotTime {
      get { return rdbNextSnapshotTime_; }
      set {
        rdbNextSnapshotTime_ = value;
      }
    }

    /// <summary>Field number for the "rdb_snapshot_start_time" field.</summary>
    public const int RdbSnapshotStartTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp rdbSnapshotStartTime_;
    /// <summary>
    /// Optional. Date and time that the first snapshot was/will be attempted, and
    /// to which future snapshots will be aligned. If not provided, the current
    /// time will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RdbSnapshotStartTime {
      get { return rdbSnapshotStartTime_; }
      set {
        rdbSnapshotStartTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PersistenceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PersistenceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersistenceMode != other.PersistenceMode) return false;
      if (RdbSnapshotPeriod != other.RdbSnapshotPeriod) return false;
      if (!object.Equals(RdbNextSnapshotTime, other.RdbNextSnapshotTime)) return false;
      if (!object.Equals(RdbSnapshotStartTime, other.RdbSnapshotStartTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PersistenceMode != global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode.Unspecified) hash ^= PersistenceMode.GetHashCode();
      if (RdbSnapshotPeriod != global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod.Unspecified) hash ^= RdbSnapshotPeriod.GetHashCode();
      if (rdbNextSnapshotTime_ != null) hash ^= RdbNextSnapshotTime.GetHashCode();
      if (rdbSnapshotStartTime_ != null) hash ^= RdbSnapshotStartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PersistenceMode != global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PersistenceMode);
      }
      if (RdbSnapshotPeriod != global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RdbSnapshotPeriod);
      }
      if (rdbNextSnapshotTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RdbNextSnapshotTime);
      }
      if (rdbSnapshotStartTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RdbSnapshotStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PersistenceMode != global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PersistenceMode);
      }
      if (RdbSnapshotPeriod != global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RdbSnapshotPeriod);
      }
      if (rdbNextSnapshotTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RdbNextSnapshotTime);
      }
      if (rdbSnapshotStartTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RdbSnapshotStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PersistenceMode != global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PersistenceMode);
      }
      if (RdbSnapshotPeriod != global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RdbSnapshotPeriod);
      }
      if (rdbNextSnapshotTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RdbNextSnapshotTime);
      }
      if (rdbSnapshotStartTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RdbSnapshotStartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PersistenceConfig other) {
      if (other == null) {
        return;
      }
      if (other.PersistenceMode != global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode.Unspecified) {
        PersistenceMode = other.PersistenceMode;
      }
      if (other.RdbSnapshotPeriod != global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod.Unspecified) {
        RdbSnapshotPeriod = other.RdbSnapshotPeriod;
      }
      if (other.rdbNextSnapshotTime_ != null) {
        if (rdbNextSnapshotTime_ == null) {
          RdbNextSnapshotTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RdbNextSnapshotTime.MergeFrom(other.RdbNextSnapshotTime);
      }
      if (other.rdbSnapshotStartTime_ != null) {
        if (rdbSnapshotStartTime_ == null) {
          RdbSnapshotStartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RdbSnapshotStartTime.MergeFrom(other.RdbSnapshotStartTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PersistenceMode = (global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode) input.ReadEnum();
            break;
          }
          case 16: {
            RdbSnapshotPeriod = (global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod) input.ReadEnum();
            break;
          }
          case 34: {
            if (rdbNextSnapshotTime_ == null) {
              RdbNextSnapshotTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RdbNextSnapshotTime);
            break;
          }
          case 42: {
            if (rdbSnapshotStartTime_ == null) {
              RdbSnapshotStartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RdbSnapshotStartTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PersistenceMode = (global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.PersistenceMode) input.ReadEnum();
            break;
          }
          case 16: {
            RdbSnapshotPeriod = (global::Google.Events.Protobuf.Cloud.Redis.V1.PersistenceConfig.Types.SnapshotPeriod) input.ReadEnum();
            break;
          }
          case 34: {
            if (rdbNextSnapshotTime_ == null) {
              RdbNextSnapshotTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RdbNextSnapshotTime);
            break;
          }
          case 42: {
            if (rdbSnapshotStartTime_ == null) {
              RdbSnapshotStartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RdbSnapshotStartTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PersistenceConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Available Persistence modes.
      /// </summary>
      public enum PersistenceMode {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("PERSISTENCE_MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Persistence is disabled for the instance,
        /// and any existing snapshots are deleted.
        /// </summary>
        [pbr::OriginalName("DISABLED")] Disabled = 1,
        /// <summary>
        /// RDB based Persistence is enabled.
        /// </summary>
        [pbr::OriginalName("RDB")] Rdb = 2,
      }

      /// <summary>
      /// Available snapshot periods for scheduling.
      /// </summary>
      public enum SnapshotPeriod {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("SNAPSHOT_PERIOD_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Snapshot every 1 hour.
        /// </summary>
        [pbr::OriginalName("ONE_HOUR")] OneHour = 3,
        /// <summary>
        /// Snapshot every 6 hours.
        /// </summary>
        [pbr::OriginalName("SIX_HOURS")] SixHours = 4,
        /// <summary>
        /// Snapshot every 12 hours.
        /// </summary>
        [pbr::OriginalName("TWELVE_HOURS")] TwelveHours = 5,
        /// <summary>
        /// Snapshot every 24 hours.
        /// </summary>
        [pbr::OriginalName("TWENTY_FOUR_HOURS")] TwentyFourHours = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// Maintenance policy for an instance.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MaintenancePolicy : pb::IMessage<MaintenancePolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MaintenancePolicy> _parser = new pb::MessageParser<MaintenancePolicy>(() => new MaintenancePolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MaintenancePolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.Redis.V1.DataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaintenancePolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaintenancePolicy(MaintenancePolicy other) : this() {
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      description_ = other.description_;
      weeklyMaintenanceWindow_ = other.weeklyMaintenanceWindow_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaintenancePolicy Clone() {
      return new MaintenancePolicy(this);
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time when the policy was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time when the policy was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Optional. Description of what this policy is for. Create/Update methods
    /// return INVALID_ARGUMENT if the length is greater than 512.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "weekly_maintenance_window" field.</summary>
    public const int WeeklyMaintenanceWindowFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Events.Protobuf.Cloud.Redis.V1.WeeklyMaintenanceWindow> _repeated_weeklyMaintenanceWindow_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Events.Protobuf.Cloud.Redis.V1.WeeklyMaintenanceWindow.Parser);
    private readonly pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.WeeklyMaintenanceWindow> weeklyMaintenanceWindow_ = new pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.WeeklyMaintenanceWindow>();
    /// <summary>
    /// Optional. Maintenance window that is applied to resources covered by this
    /// policy. Minimum 1. For the current version, the maximum number of
    /// weekly_window is expected to be one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Events.Protobuf.Cloud.Redis.V1.WeeklyMaintenanceWindow> WeeklyMaintenanceWindow {
      get { return weeklyMaintenanceWindow_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MaintenancePolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MaintenancePolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (Description != other.Description) return false;
      if(!weeklyMaintenanceWindow_.Equals(other.weeklyMaintenanceWindow_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= weeklyMaintenanceWindow_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateTime);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      weeklyMaintenanceWindow_.WriteTo(output, _repeated_weeklyMaintenanceWindow_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateTime);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      weeklyMaintenanceWindow_.WriteTo(ref output, _repeated_weeklyMaintenanceWindow_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += weeklyMaintenanceWindow_.CalculateSize(_repeated_weeklyMaintenanceWindow_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MaintenancePolicy other) {
      if (other == null) {
        return;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      weeklyMaintenanceWindow_.Add(other.weeklyMaintenanceWindow_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            weeklyMaintenanceWindow_.AddEntriesFrom(input, _repeated_weeklyMaintenanceWindow_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            weeklyMaintenanceWindow_.AddEntriesFrom(ref input, _repeated_weeklyMaintenanceWindow_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Time window in which disruptive maintenance updates occur. Non-disruptive
  /// updates can occur inside or outside this window.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WeeklyMaintenanceWindow : pb::IMessage<WeeklyMaintenanceWindow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WeeklyMaintenanceWindow> _parser = new pb::MessageParser<WeeklyMaintenanceWindow>(() => new WeeklyMaintenanceWindow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WeeklyMaintenanceWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.Redis.V1.DataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeeklyMaintenanceWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeeklyMaintenanceWindow(WeeklyMaintenanceWindow other) : this() {
      day_ = other.day_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      duration_ = other.duration_ != null ? other.duration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeeklyMaintenanceWindow Clone() {
      return new WeeklyMaintenanceWindow(this);
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 1;
    private global::Google.Type.DayOfWeek day_ = global::Google.Type.DayOfWeek.Unspecified;
    /// <summary>
    /// Required. The day of week that maintenance updates occur.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.DayOfWeek Day {
      get { return day_; }
      set {
        day_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private global::Google.Type.TimeOfDay startTime_;
    /// <summary>
    /// Required. Start time of the window in UTC time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.TimeOfDay StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration duration_;
    /// <summary>
    /// Output only. Duration of the maintenance window. The current window is
    /// fixed at 1 hour.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WeeklyMaintenanceWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WeeklyMaintenanceWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Day != other.Day) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(Duration, other.Duration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Day != global::Google.Type.DayOfWeek.Unspecified) hash ^= Day.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (duration_ != null) hash ^= Duration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Day != global::Google.Type.DayOfWeek.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Day);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (duration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Day != global::Google.Type.DayOfWeek.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Day);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (duration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Day != global::Google.Type.DayOfWeek.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Day);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (duration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WeeklyMaintenanceWindow other) {
      if (other == null) {
        return;
      }
      if (other.Day != global::Google.Type.DayOfWeek.Unspecified) {
        Day = other.Day;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Type.TimeOfDay();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.duration_ != null) {
        if (duration_ == null) {
          Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Duration.MergeFrom(other.Duration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Day = (global::Google.Type.DayOfWeek) input.ReadEnum();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Day = (global::Google.Type.DayOfWeek) input.ReadEnum();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (duration_ == null) {
              Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Upcoming maintenance schedule. If no maintenance is scheduled, fields are not
  /// populated.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MaintenanceSchedule : pb::IMessage<MaintenanceSchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MaintenanceSchedule> _parser = new pb::MessageParser<MaintenanceSchedule>(() => new MaintenanceSchedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MaintenanceSchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.Redis.V1.DataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaintenanceSchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaintenanceSchedule(MaintenanceSchedule other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      canReschedule_ = other.canReschedule_;
      scheduleDeadlineTime_ = other.scheduleDeadlineTime_ != null ? other.scheduleDeadlineTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaintenanceSchedule Clone() {
      return new MaintenanceSchedule(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Output only. The start time of any upcoming scheduled maintenance for this
    /// instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. The end time of any upcoming scheduled maintenance for this
    /// instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "can_reschedule" field.</summary>
    public const int CanRescheduleFieldNumber = 3;
    private bool canReschedule_;
    /// <summary>
    /// If the scheduled maintenance can be rescheduled, default is true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanReschedule {
      get { return canReschedule_; }
      set {
        canReschedule_ = value;
      }
    }

    /// <summary>Field number for the "schedule_deadline_time" field.</summary>
    public const int ScheduleDeadlineTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduleDeadlineTime_;
    /// <summary>
    /// Output only. The deadline that the maintenance schedule start time can not
    /// go beyond, including reschedule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduleDeadlineTime {
      get { return scheduleDeadlineTime_; }
      set {
        scheduleDeadlineTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MaintenanceSchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MaintenanceSchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (CanReschedule != other.CanReschedule) return false;
      if (!object.Equals(ScheduleDeadlineTime, other.ScheduleDeadlineTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (CanReschedule != false) hash ^= CanReschedule.GetHashCode();
      if (scheduleDeadlineTime_ != null) hash ^= ScheduleDeadlineTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (CanReschedule != false) {
        output.WriteRawTag(24);
        output.WriteBool(CanReschedule);
      }
      if (scheduleDeadlineTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ScheduleDeadlineTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (CanReschedule != false) {
        output.WriteRawTag(24);
        output.WriteBool(CanReschedule);
      }
      if (scheduleDeadlineTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ScheduleDeadlineTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (CanReschedule != false) {
        size += 1 + 1;
      }
      if (scheduleDeadlineTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleDeadlineTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MaintenanceSchedule other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.CanReschedule != false) {
        CanReschedule = other.CanReschedule;
      }
      if (other.scheduleDeadlineTime_ != null) {
        if (scheduleDeadlineTime_ == null) {
          ScheduleDeadlineTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduleDeadlineTime.MergeFrom(other.ScheduleDeadlineTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            CanReschedule = input.ReadBool();
            break;
          }
          case 42: {
            if (scheduleDeadlineTime_ == null) {
              ScheduleDeadlineTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduleDeadlineTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            CanReschedule = input.ReadBool();
            break;
          }
          case 42: {
            if (scheduleDeadlineTime_ == null) {
              ScheduleDeadlineTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduleDeadlineTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TlsCertificate Resource
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TlsCertificate : pb::IMessage<TlsCertificate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TlsCertificate> _parser = new pb::MessageParser<TlsCertificate>(() => new TlsCertificate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TlsCertificate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.Redis.V1.DataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TlsCertificate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TlsCertificate(TlsCertificate other) : this() {
      serialNumber_ = other.serialNumber_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      expireTime_ = other.expireTime_ != null ? other.expireTime_.Clone() : null;
      sha1Fingerprint_ = other.sha1Fingerprint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TlsCertificate Clone() {
      return new TlsCertificate(this);
    }

    /// <summary>Field number for the "serial_number" field.</summary>
    public const int SerialNumberFieldNumber = 1;
    private string serialNumber_ = "";
    /// <summary>
    /// Serial number, as extracted from the certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SerialNumber {
      get { return serialNumber_; }
      set {
        serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time when the certificate was created in [RFC
    /// 3339](https://tools.ietf.org/html/rfc3339) format, for example
    /// `2020-05-18T00:00:00.094Z`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireTime_;
    /// <summary>
    /// Output only. The time when the certificate expires in [RFC
    /// 3339](https://tools.ietf.org/html/rfc3339) format, for example
    /// `2020-05-18T00:00:00.094Z`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    /// <summary>Field number for the "sha1_fingerprint" field.</summary>
    public const int Sha1FingerprintFieldNumber = 5;
    private string sha1Fingerprint_ = "";
    /// <summary>
    /// Sha1 Fingerprint of the certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sha1Fingerprint {
      get { return sha1Fingerprint_; }
      set {
        sha1Fingerprint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TlsCertificate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TlsCertificate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SerialNumber != other.SerialNumber) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(ExpireTime, other.ExpireTime)) return false;
      if (Sha1Fingerprint != other.Sha1Fingerprint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SerialNumber.Length != 0) hash ^= SerialNumber.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (expireTime_ != null) hash ^= ExpireTime.GetHashCode();
      if (Sha1Fingerprint.Length != 0) hash ^= Sha1Fingerprint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SerialNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SerialNumber);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (expireTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpireTime);
      }
      if (Sha1Fingerprint.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Sha1Fingerprint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SerialNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SerialNumber);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (expireTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpireTime);
      }
      if (Sha1Fingerprint.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Sha1Fingerprint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SerialNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (expireTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireTime);
      }
      if (Sha1Fingerprint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sha1Fingerprint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TlsCertificate other) {
      if (other == null) {
        return;
      }
      if (other.SerialNumber.Length != 0) {
        SerialNumber = other.SerialNumber;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.expireTime_ != null) {
        if (expireTime_ == null) {
          ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireTime.MergeFrom(other.ExpireTime);
      }
      if (other.Sha1Fingerprint.Length != 0) {
        Sha1Fingerprint = other.Sha1Fingerprint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SerialNumber = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 42: {
            Sha1Fingerprint = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SerialNumber = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 42: {
            Sha1Fingerprint = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The data within all Instance events.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstanceEventData : pb::IMessage<InstanceEventData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstanceEventData> _parser = new pb::MessageParser<InstanceEventData>(() => new InstanceEventData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstanceEventData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Events.Protobuf.Cloud.Redis.V1.DataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceEventData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceEventData(InstanceEventData other) : this() {
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceEventData Clone() {
      return new InstanceEventData(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private global::Google.Events.Protobuf.Cloud.Redis.V1.Instance payload_;
    /// <summary>
    /// Optional. The Instance event payload. Unset for deletion events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Events.Protobuf.Cloud.Redis.V1.Instance Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstanceEventData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstanceEventData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (payload_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (payload_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstanceEventData other) {
      if (other == null) {
        return;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::Google.Events.Protobuf.Cloud.Redis.V1.Instance();
        }
        Payload.MergeFrom(other.Payload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (payload_ == null) {
              Payload = new global::Google.Events.Protobuf.Cloud.Redis.V1.Instance();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (payload_ == null) {
              Payload = new global::Google.Events.Protobuf.Cloud.Redis.V1.Instance();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
